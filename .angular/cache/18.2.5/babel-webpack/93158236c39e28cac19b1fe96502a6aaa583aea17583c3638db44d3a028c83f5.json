{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/services/patients/patients.service\";\nimport * as i2 from \"./../../../src/services/visits/visits.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/services/users/users.service\";\nimport * as i5 from \"@angular/common\";\nfunction VisitsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4)(2, \"div\", 5)(3, \"h5\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 7);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function VisitsComponent_div_4_Template_button_click_8_listener() {\n      const visit_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.viewDetails(visit_r2.id));\n    });\n    i0.ɵɵtext(9, \"View Details\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const visit_r2 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind2(5, 3, visit_r2.date, \"MMM dd, yyyy\"), \"\", visit_r2.time, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(visit_r2.treatment);\n  }\n}\nexport class VisitsComponent {\n  constructor(patientService, visitsService, router, usersService) {\n    this.patientService = patientService;\n    this.visitsService = visitsService;\n    this.router = router;\n    this.usersService = usersService;\n    this.vpatient = {\n      visits: []\n    };\n    this.visits = []; // Add this line\n  }\n  ngOnInit() {\n    const patientId = '3'; // Replace with the actual patient ID\n    this.patientService.getPatient(patientId).subscribe(\n    // here we need to get the patient detials\n    user => {\n      this.user = user;\n      this.vpatient.visits = user.visits;\n      this.visitsService.getVisits(patientId).subscribe(data => this.visits = data, error => console.error('Error fetching visits:', error));\n    }, error => console.error(error));\n  }\n  viewDetails(id) {\n    this.router.navigate(['/visit-details', id]);\n  }\n  static {\n    this.ɵfac = function VisitsComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || VisitsComponent)(i0.ɵɵdirectiveInject(i1.PatientsService), i0.ɵɵdirectiveInject(i2.VisitsService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.UsersService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: VisitsComponent,\n      selectors: [[\"app-visits\"]],\n      decls: 5,\n      vars: 1,\n      consts: [[1, \"container\"], [1, \"row\"], [\"class\", \"col-md-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\"], [1, \"card\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n      template: function VisitsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Visits\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1);\n          i0.ɵɵtemplate(4, VisitsComponent_div_4_Template, 10, 6, \"div\", 2);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.vpatient.visits);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.DatePipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","VisitsComponent_div_4_Template_button_click_8_listener","visit_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","viewDetails","id","ɵɵadvance","ɵɵtextInterpolate2","ɵɵpipeBind2","date","time","ɵɵtextInterpolate","treatment","VisitsComponent","constructor","patientService","visitsService","router","usersService","vpatient","visits","ngOnInit","patientId","getPatient","subscribe","user","getVisits","data","error","console","navigate","ɵɵdirectiveInject","i1","PatientsService","i2","VisitsService","i3","Router","i4","UsersService","selectors","decls","vars","consts","template","VisitsComponent_Template","rf","ctx","ɵɵtemplate","VisitsComponent_div_4_Template","ɵɵproperty"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\visits\\visits.component.ts","E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\visits\\visits.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { VisitsService } from './../../../src/services/visits/visits.service'; // Import the VisitsService\r\nimport { Router } from '@angular/router'; // Import the Router\r\nimport { UsersService } from 'src/services/users/users.service';\r\nimport { PatientsService } from 'src/services/patients/patients.service';\r\n\r\n\r\ninterface Visit {\r\n  id: number;\r\n  date: string;\r\n  time: string;\r\n  treatment: string;\r\n  // Add other properties as needed\r\n}\r\n\r\n@Component({\r\n  selector: 'app-visits',\r\n  templateUrl: './visits.component.html',\r\n  styleUrls: ['./visits.component.scss']\r\n})\r\nexport class VisitsComponent implements OnInit {\r\n  vpatient = {\r\n    visits: [] as Visit[]\r\n  };\r\n  visits: any[] = []; // Add this line\r\n  user: any; // Replace 'any' with the actual type of your user data\r\n  constructor(private patientService: PatientsService,private visitsService: VisitsService, private router: Router, private usersService:UsersService) { }\r\n\r\n  ngOnInit(): void {\r\n    const patientId = '3'; // Replace with the actual patient ID\r\n    this.patientService.getPatient(patientId).subscribe( // here we need to get the patient detials\r\n      (user: any) => {\r\n        this.user = user;\r\n        this.vpatient.visits = user.visits;\r\n        this.visitsService.getVisits(patientId).subscribe(\r\n          data => this.visits = data,\r\n          error => console.error('Error fetching visits:', error)\r\n        );\r\n      },\r\n      error => console.error(error)\r\n    );\r\n  }\r\n\r\n  viewDetails(id: number): void {\r\n    this.router.navigate(['/visit-details', id]);\r\n  }\r\n\r\n}\r\n","\r\n<!-- <div *ngif=\"vpatient.visits.length > 0\"> -->\r\n   \r\n    <div class=\"container\">\r\n        <h2>Visits</h2>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\" *ngFor=\"let visit of vpatient.visits\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{{visit.date | date:'MMM dd, yyyy'}}{{visit.time}}</h5>\r\n                <p class=\"card-text\">{{visit.treatment}}</p>\r\n                <button class=\"btn btn-primary\" (click)=\"viewDetails(visit.id)\">View Details</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n<!-- <ul>\r\n    <li *ngFor=\"let visit of visits\">\r\n      Replace with your actual visit properties\r\n      <p>{{visit.date}}</p>\r\n      <p>{{visit.reason}}</p>\r\n    </li>\r\n  </ul> -->\r\n<!-- </div>\r\n<div *ngif=\"vpatient.visits.length === 0\">\r\n    <h2>No Visits found</h2>\r\n</div> -->"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}