{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../src/services/auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.authService.isLoggedIn()) {\n      if (route.routeConfig?.path === 'add-visit/:id') {\n        return this.router.createUrlTree(['/login']);\n      }\n      return true;\n    } else {\n      return this.router.createUrlTree(['/login']);\n    }\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","route","state","isLoggedIn","routeConfig","path","createUrlTree","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './../../src/services/auth/auth.service'; // Adjust the path as necessary\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | UrlTree {\r\n    if (this.authService.isLoggedIn()) {\r\n      if (route.routeConfig?.path === 'add-visit/:id' ) {\r\n        return this.router.createUrlTree(['/login']);\r\n      }\r\n      return true;\r\n    } else {\r\n      return this.router.createUrlTree(['/login']);\r\n    }\r\n  }\r\n}"],"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,IAAI,CAACJ,WAAW,CAACK,UAAU,EAAE,EAAE;MACjC,IAAIF,KAAK,CAACG,WAAW,EAAEC,IAAI,KAAK,eAAe,EAAG;QAChD,OAAO,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC9C;MACA,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAO,IAAI,CAACP,MAAM,CAACO,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC9C;EACF;;;uCAhBWV,SAAS,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAThB,SAAS;MAAAiB,OAAA,EAATjB,SAAS,CAAAkB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}