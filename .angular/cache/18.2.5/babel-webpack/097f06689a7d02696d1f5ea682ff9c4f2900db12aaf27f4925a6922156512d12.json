{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/patients';\n    this.loggedInuser = 'http://localhost:3000/users'; // Add this line\n  }\n  getUser(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  getloggesInUser() {\n    return this.http.get(`${this.loggedInuser}`);\n  }\n  createUser(userData) {\n    return this.http.post(this.apiUrl, userData);\n  }\n  static {\n    this.ɵfac = function UsersService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UsersService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UsersService,\n      factory: UsersService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["UsersService","constructor","http","apiUrl","loggedInuser","getUser","id","get","getloggesInUser","createUser","userData","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\services\\users\\users.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsersService {\r\n  private apiUrl = 'http://localhost:3000/patients';\r\n  private loggedInuser = 'http://localhost:3000/users'; // Add this line\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUser(id: string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${id}`);\r\n  }\r\n  getloggesInUser(): Observable<any> {\r\n    return this.http.get<any>(`${this.loggedInuser}`);\r\n  }\r\n\r\n  createUser(userData: any): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl, userData);\r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,gCAAgC;IACzC,KAAAC,YAAY,GAAG,6BAA6B,CAAC,CAAC;EACd;EAExCC,OAAOA,CAACC,EAAU;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAM,GAAG,IAAI,CAACJ,MAAM,IAAIG,EAAE,EAAE,CAAC;EACnD;EACAE,eAAeA,CAAA;IACb,OAAO,IAAI,CAACN,IAAI,CAACK,GAAG,CAAM,GAAG,IAAI,CAACH,YAAY,EAAE,CAAC;EACnD;EAEAK,UAAUA,CAACC,QAAa;IACtB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAM,IAAI,CAACR,MAAM,EAAEO,QAAQ,CAAC;EACnD;;;uCAdWV,YAAY,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZf,YAAY;MAAAgB,OAAA,EAAZhB,YAAY,CAAAiB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}