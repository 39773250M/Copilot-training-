{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../../../src/services/visits/visits.service\";\nimport * as i4 from \"./../../../src/services/patients/patients.service\";\nimport * as i5 from \"./../../../src/services/auth/auth.service\";\nimport * as i6 from \"@angular/common\";\nfunction AddVisitComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Consultation is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddVisitComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Symptoms are required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddVisitComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Treatment is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddVisitComponent_div_26_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Medicine name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddVisitComponent_div_26_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \" Duration is required and must be at least 1 day. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddVisitComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 4)(2, \"h4\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 21)(5, \"label\", 22);\n    i0.ɵɵtext(6, \"Medicine Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 23);\n    i0.ɵɵtemplate(8, AddVisitComponent_div_26_div_8_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 24)(10, \"label\");\n    i0.ɵɵtext(11, \"Dosage\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 25);\n    i0.ɵɵelement(13, \"input\", 26);\n    i0.ɵɵelementStart(14, \"label\", 27);\n    i0.ɵɵtext(15, \"Morning\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 25);\n    i0.ɵɵelement(17, \"input\", 28);\n    i0.ɵɵelementStart(18, \"label\", 27);\n    i0.ɵɵtext(19, \"Afternoon\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 25);\n    i0.ɵɵelement(21, \"input\", 29);\n    i0.ɵɵelementStart(22, \"label\", 27);\n    i0.ɵɵtext(23, \"Evening\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"div\", 21)(25, \"div\", 25);\n    i0.ɵɵelement(26, \"input\", 30);\n    i0.ɵɵelementStart(27, \"label\", 27);\n    i0.ɵɵtext(28, \"After Meals\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(29, \"div\", 21)(30, \"label\", 31);\n    i0.ɵɵtext(31, \"Duration (days)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"input\", 32);\n    i0.ɵɵtemplate(33, AddVisitComponent_div_26_div_33_Template, 2, 0, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function AddVisitComponent_div_26_Template_button_click_34_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removePrescription(i_r2));\n    });\n    i0.ɵɵtext(35, \"Remove Prescription\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    let tmp_5_0;\n    let tmp_16_0;\n    const prescription_r4 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Prescription \", i_r2 + 1, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = prescription_r4.get(\"medicineName\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = prescription_r4.get(\"medicineName\")) == null ? null : tmp_5_0.touched));\n    i0.ɵɵadvance(5);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"morning\", i_r2, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate1(\"for\", \"morning\", i_r2, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"afternoon\", i_r2, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate1(\"for\", \"afternoon\", i_r2, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"evening\", i_r2, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate1(\"for\", \"evening\", i_r2, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"afterMeals\", i_r2, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate1(\"for\", \"afterMeals\", i_r2, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"duration\", i_r2, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"duration\", i_r2, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_16_0 = prescription_r4.get(\"duration\")) == null ? null : tmp_16_0.invalid) && ((tmp_16_0 = prescription_r4.get(\"duration\")) == null ? null : tmp_16_0.touched));\n  }\n}\nexport class AddVisitComponent {\n  constructor(fb, route, visitService, router, patientService, authService) {\n    this.fb = fb;\n    this.route = route;\n    this.visitService = visitService;\n    this.router = router;\n    this.patientService = patientService;\n    this.authService = authService;\n    this.patientId = 1;\n    this.visitForm = this.fb.group({\n      consultation: ['', Validators.required],\n      symptoms: ['', Validators.required],\n      treatment: ['', Validators.required],\n      advice: ['', Validators.required],\n      prescriptions: this.fb.array([this.createPrescription()])\n    });\n    this.patientId = +this.route.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    // this.patientId = +this.route.snapshot.paramMap.get('id')!;\n    // this.getPatientDetails();\n    this.route.params.subscribe(params => {\n      this.patientId = +params['id']; // The '+' converts the string 'id' to a number\n    });\n  }\n  get prescriptions() {\n    return this.visitForm.get('prescriptions');\n  }\n  getPatientDetails() {\n    this.patientService.getPatient(this.patientId).subscribe(patient => {\n      this.patientDetails = patient;\n      console.log('Patient details:', patient);\n    }, error => {\n      console.error('Error fetching patient details:', error);\n    });\n  }\n  // addVisit(): void {\n  //   if (this.visitForm.valid) {\n  //     const visitData = {\n  //       patientId: this.patientId,\n  //       consultation: this.visitForm.value.consultation,\n  //       treatment: this.visitForm.value.treatment,\n  //       prescription: this.visitForm.value.prescription\n  //     };\n  //     this.visitService.addVisit(visitData).subscribe(\n  //       (response: any) => {\n  //         console.log('Visit added successfully:', response);\n  //         this.router.navigate(['/patients']);\n  //       },\n  //       (error: any) => {\n  //         console.error('Error adding visit:', error);\n  //       }\n  //     );\n  //   }\n  // }\n  onSubmit() {\n    if (this.visitForm.valid) {\n      const visitData = {\n        ...this.visitForm.value,\n        patientId: this.patientId\n      };\n      this.visitService.addVisit(visitData).subscribe(response => {\n        console.log('Visit added successfully', response);\n        this.router.navigate(['/visits']);\n      }, error => {\n        console.error('Error adding visit', error);\n      });\n    }\n  }\n  createPrescription() {\n    return this.fb.group({\n      medicineName: ['', Validators.required],\n      dosage: this.fb.group({\n        morning: [false],\n        afternoon: [false],\n        evening: [false]\n      }),\n      afterMeals: [false],\n      duration: ['', [Validators.required, Validators.min(1)]]\n    });\n  }\n  addPrescription() {\n    this.prescriptions.push(this.createPrescription());\n  }\n  removePrescription(index) {\n    this.prescriptions.removeAt(index);\n  }\n  saveVisit() {\n    const visit = {\n      DoctorID: this.authService.getCurrentUser,\n      // Assuming AuthService has a method to get the logged-in user's ID\n      PatientID: this.patientId,\n      Date: new Date().toISOString().split('T')[0],\n      // Current date in YYYY-MM-DD format\n      Time: new Date().toTimeString().split(' ')[0].slice(0, 5),\n      // Current time in HH:MM format\n      Symptoms: this.visitForm.value.symptoms,\n      Treatment: this.visitForm.value.treatment,\n      Advice: this.visitForm.value.advice,\n      Prescriptions: this.visitForm.value.prescriptions\n    };\n    this.visitService.addVisit(visit).subscribe(response => {\n      console.log('Visit saved successfully', response);\n      this.router.navigate(['/visits']); // Navigate to the visits list or another appropriate page\n    }, error => {\n      console.error('Error saving visit', error);\n    });\n  }\n  static {\n    this.ɵfac = function AddVisitComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AddVisitComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.VisitsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i4.PatientsService), i0.ɵɵdirectiveInject(i5.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddVisitComponent,\n      selectors: [[\"app-add-visit\"]],\n      decls: 31,\n      vars: 6,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\", \"mb-4\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"consultation\", 1, \"form-label\"], [\"id\", \"consultation\", \"formControlName\", \"consultation\", \"rows\", \"3\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"symptoms\", 1, \"form-label\"], [\"id\", \"symptoms\", \"formControlName\", \"symptoms\", \"rows\", \"3\", 1, \"form-control\"], [\"for\", \"treatment\", 1, \"form-label\"], [\"id\", \"treatment\", \"formControlName\", \"treatment\", \"rows\", \"3\", 1, \"form-control\"], [\"formArrayName\", \"prescriptions\", 1, \"container\"], [\"class\", \"card mb-3\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [1, \"text-danger\"], [1, \"card\", \"mb-3\", 3, \"formGroupName\"], [1, \"form-group\"], [\"for\", \"medicineName\"], [\"id\", \"medicineName\", \"formControlName\", \"medicineName\", 1, \"form-control\"], [\"formGroupName\", \"dosage\", 1, \"form-group\"], [1, \"form-check\"], [\"type\", \"checkbox\", \"formControlName\", \"morning\", 1, \"form-check-input\", 3, \"id\"], [1, \"form-check-label\", 3, \"for\"], [\"type\", \"checkbox\", \"formControlName\", \"afternoon\", 1, \"form-check-input\", 3, \"id\"], [\"type\", \"checkbox\", \"formControlName\", \"evening\", 1, \"form-check-input\", 3, \"id\"], [\"type\", \"checkbox\", \"formControlName\", \"afterMeals\", 1, \"form-check-input\", 3, \"id\"], [3, \"for\"], [\"type\", \"number\", \"formControlName\", \"duration\", 1, \"form-control\", 3, \"id\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"]],\n      template: function AddVisitComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h2\");\n          i0.ɵɵtext(1, \"Patient Consultation and Treatment Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"h2\", 5);\n          i0.ɵɵtext(8, \"Add Visit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function AddVisitComponent_Template_form_ngSubmit_9_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(10, \"div\", 7)(11, \"label\", 8);\n          i0.ɵɵtext(12, \"Consultation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"textarea\", 9);\n          i0.ɵɵtemplate(14, AddVisitComponent_div_14_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 11);\n          i0.ɵɵtext(17, \"Symptoms\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"textarea\", 12);\n          i0.ɵɵtemplate(19, AddVisitComponent_div_19_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 7)(21, \"label\", 13);\n          i0.ɵɵtext(22, \"Treatment\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"textarea\", 14);\n          i0.ɵɵtemplate(24, AddVisitComponent_div_24_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 15);\n          i0.ɵɵtemplate(26, AddVisitComponent_div_26_Template, 36, 24, \"div\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"button\", 17);\n          i0.ɵɵlistener(\"click\", function AddVisitComponent_Template_button_click_27_listener() {\n            return ctx.addPrescription();\n          });\n          i0.ɵɵtext(28, \"Add Prescription\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"button\", 18);\n          i0.ɵɵtext(30, \"Add Visit\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"formGroup\", ctx.visitForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.visitForm.get(\"consultation\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.visitForm.get(\"consultation\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.visitForm.get(\"symptoms\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.visitForm.get(\"symptoms\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.visitForm.get(\"treatment\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.visitForm.get(\"treatment\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.prescriptions.controls);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.visitForm.invalid);\n        }\n      },\n      dependencies: [i6.NgForOf, i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n      styles: [\".grid-container[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  gap: 20px;\\n}\\n\\n.grid-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.error[_ngcontent-%COMP%] {\\n  color: red;\\n  font-size: 0.8em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLXZpc2l0L2FkZC12aXNpdC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uL2NvcGlsb3QlMjBhbmd1bGFyJTIwaG9zcGl0YWwvQ29waWxvdC10cmFpbmluZy9zcmMvYXBwL2FkZC12aXNpdC9hZGQtdmlzaXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFBO0VBQ0EscUNBQUE7RUFDQSxTQUFBO0FDQ0o7O0FERUU7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7QUNDSjs7QURFRTtFQUNFLFVBQUE7RUFDQSxnQkFBQTtBQ0NKIiwic291cmNlc0NvbnRlbnQiOlsiLmdyaWQtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCAxZnIpO1xyXG4gICAgZ2FwOiAyMHB4O1xyXG4gIH1cclxuXHJcbiAgLmdyaWQtaXRlbSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICB9XHJcblxyXG4gIC5lcnJvciB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG4gICAgZm9udC1zaXplOiAwLjhlbTtcclxuICB9IiwiLmdyaWQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMiwgMWZyKTtcbiAgZ2FwOiAyMHB4O1xufVxuXG4uZ3JpZC1pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmVycm9yIHtcbiAgY29sb3I6IHJlZDtcbiAgZm9udC1zaXplOiAwLjhlbTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\", \".grid-container[_ngcontent-%COMP%] {\\n      display: grid;\\n      grid-template-columns: repeat(2, 1fr);\\n      gap: 20px;\\n    }\\n  \\n    .grid-item[_ngcontent-%COMP%] {\\n      display: flex;\\n      flex-direction: column;\\n    }\\n  \\n    .prescription-item[_ngcontent-%COMP%] {\\n      margin-bottom: 20px;\\n      padding: 10px;\\n      border: 1px solid #ccc;\\n      border-radius: 5px;\\n    }\\n  \\n    .error[_ngcontent-%COMP%] {\\n      color: red;\\n      font-size: 0.8em;\\n    }\\n  \\n    .btn-group[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%] {\\n      margin-right: 5px;\\n    }\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵtemplate","AddVisitComponent_div_26_div_8_Template","AddVisitComponent_div_26_div_33_Template","ɵɵlistener","AddVisitComponent_div_26_Template_button_click_34_listener","i_r2","ɵɵrestoreView","_r1","index","ctx_r2","ɵɵnextContext","ɵɵresetView","removePrescription","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","tmp_5_0","prescription_r4","get","invalid","touched","ɵɵpropertyInterpolate1","tmp_16_0","AddVisitComponent","constructor","fb","route","visitService","router","patientService","authService","patientId","visitForm","group","consultation","required","symptoms","treatment","advice","prescriptions","array","createPrescription","snapshot","paramMap","ngOnInit","params","subscribe","getPatientDetails","getPatient","patient","patientDetails","console","log","error","onSubmit","valid","visitData","value","addVisit","response","navigate","medicineName","dosage","morning","afternoon","evening","afterMeals","duration","min","addPrescription","push","removeAt","saveVisit","visit","DoctorID","getCurrentUser","PatientID","Date","toISOString","split","Time","toTimeString","slice","Symptoms","Treatment","Advice","Prescriptions","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","i3","VisitsService","Router","i4","PatientsService","i5","AuthService","selectors","decls","vars","consts","template","AddVisitComponent_Template","rf","ctx","AddVisitComponent_Template_form_ngSubmit_9_listener","AddVisitComponent_div_14_Template","AddVisitComponent_div_19_Template","AddVisitComponent_div_24_Template","AddVisitComponent_div_26_Template","AddVisitComponent_Template_button_click_27_listener","tmp_1_0","tmp_2_0","tmp_3_0","controls"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\add-visit\\add-visit.component.ts","E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\add-visit\\add-visit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormArray, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { VisitsService } from './../../../src/services/visits/visits.service';\r\nimport { PatientsService } from './../../../src/services/patients/patients.service';\r\nimport { AuthService } from './../../../src/services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-add-visit',\r\n  templateUrl: './add-visit.component.html',\r\n  styleUrls: ['./add-visit.component.scss']\r\n})\r\nexport class AddVisitComponent implements OnInit {\r\n  visitForm: FormGroup;\r\n  patientId: number =1;\r\n  patientDetails: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private visitService: VisitsService,\r\n    private router: Router,\r\n    private patientService:PatientsService,\r\n    private authService: AuthService\r\n  ) {\r\n    this.visitForm = this.fb.group({\r\n      consultation: ['', Validators.required],\r\n      symptoms: ['', Validators.required],\r\n      treatment: ['', Validators.required],\r\n      advice: ['', Validators.required],\r\n      prescriptions: this.fb.array([this.createPrescription()])\r\n    });\r\n    this.patientId = +this.route.snapshot.paramMap.get('id')!;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // this.patientId = +this.route.snapshot.paramMap.get('id')!;\r\n    // this.getPatientDetails();\r\n    this.route.params.subscribe(params => {\r\n      this.patientId = +params['id']; // The '+' converts the string 'id' to a number\r\n    });\r\n  }\r\n  get prescriptions(): FormArray {\r\n    return this.visitForm.get('prescriptions') as FormArray;\r\n  }\r\n\r\n  getPatientDetails(): void {\r\n    this.patientService.getPatient(this.patientId).subscribe(\r\n      (patient: any) => {\r\n        this.patientDetails = patient;\r\n        console.log('Patient details:', patient);\r\n      },\r\n      (error: any) => {\r\n        console.error('Error fetching patient details:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // addVisit(): void {\r\n  //   if (this.visitForm.valid) {\r\n  //     const visitData = {\r\n  //       patientId: this.patientId,\r\n  //       consultation: this.visitForm.value.consultation,\r\n  //       treatment: this.visitForm.value.treatment,\r\n  //       prescription: this.visitForm.value.prescription\r\n  //     };\r\n\r\n  //     this.visitService.addVisit(visitData).subscribe(\r\n  //       (response: any) => {\r\n  //         console.log('Visit added successfully:', response);\r\n  //         this.router.navigate(['/patients']);\r\n  //       },\r\n  //       (error: any) => {\r\n  //         console.error('Error adding visit:', error);\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // }\r\n  onSubmit(): void {\r\n    if (this.visitForm.valid) {\r\n      const visitData = {\r\n        ...this.visitForm.value,\r\n        patientId: this.patientId\r\n      };\r\n      this.visitService.addVisit(visitData).subscribe(\r\n        response => {\r\n          console.log('Visit added successfully', response);\r\n          this.router.navigate(['/visits']);\r\n        },\r\n        error => {\r\n          console.error('Error adding visit', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  createPrescription(): FormGroup {\r\n    return this.fb.group({\r\n      medicineName: ['', Validators.required],\r\n      dosage: this.fb.group({\r\n        morning: [false],\r\n        afternoon: [false],\r\n        evening: [false]\r\n      }),\r\n      afterMeals: [false],\r\n      duration: ['', [Validators.required, Validators.min(1)]]\r\n    });\r\n  }\r\n\r\n\r\n  addPrescription(): void {\r\n    this.prescriptions.push(this.createPrescription());\r\n  }\r\n\r\n  removePrescription(index: number): void {\r\n    this.prescriptions.removeAt(index);\r\n  }\r\n\r\n  saveVisit(): void {\r\n    const visit = {\r\n      DoctorID: this.authService.getCurrentUser, // Assuming AuthService has a method to get the logged-in user's ID\r\n      PatientID: this.patientId,\r\n      Date: new Date().toISOString().split('T')[0], // Current date in YYYY-MM-DD format\r\n      Time: new Date().toTimeString().split(' ')[0].slice(0, 5), // Current time in HH:MM format\r\n      Symptoms: this.visitForm.value.symptoms,\r\n      Treatment: this.visitForm.value.treatment,\r\n      Advice: this.visitForm.value.advice,\r\n      Prescriptions: this.visitForm.value.prescriptions\r\n    };\r\n\r\n    this.visitService.addVisit(visit).subscribe(\r\n      (response) => {\r\n        console.log('Visit saved successfully', response);\r\n        this.router.navigate(['/visits']); // Navigate to the visits list or another appropriate page\r\n      },\r\n      (error) => {\r\n        console.error('Error saving visit', error);\r\n      }\r\n    );\r\n  }\r\n  // toggleDosage(prescription: FormGroup, time: string): void {\r\n  //   const control = prescription.get(`dosage.${time}`);\r\n  //   control.setValue(!control.value);\r\n  // }\r\n\r\n  // toggleMealTime(prescription: FormGroup, afterMeals: boolean): void {\r\n  //   prescription.get('afterMeals').setValue(afterMeals);\r\n  // }\r\n\r\n\r\n}","<h2>Patient Consultation and Treatment Details</h2>\r\n<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title\">Add Visit</h2>\r\n          <form [formGroup]=\"visitForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"consultation\" class=\"form-label\">Consultation</label>\r\n              <textarea id=\"consultation\" class=\"form-control\" formControlName=\"consultation\" rows=\"3\"></textarea>\r\n              <div *ngIf=\"visitForm.get('consultation')?.invalid && visitForm.get('consultation')?.touched\" class=\"text-danger\">\r\n                Consultation is required.\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <label for=\"symptoms\" class=\"form-label\">Symptoms</label>\r\n                <textarea id=\"symptoms\" class=\"form-control\" formControlName=\"symptoms\" rows=\"3\"></textarea>\r\n                <div *ngIf=\"visitForm.get('symptoms')?.invalid && visitForm.get('symptoms')?.touched\" class=\"text-danger\">\r\n                    Symptoms are required.\r\n                </div>\r\n              </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"treatment\" class=\"form-label\">Treatment</label>\r\n              <textarea id=\"treatment\" class=\"form-control\" formControlName=\"treatment\" rows=\"3\"></textarea>\r\n              <div *ngIf=\"visitForm.get('treatment')?.invalid && visitForm.get('treatment')?.touched\" class=\"text-danger\">\r\n                Treatment is required.\r\n              </div>\r\n            </div>\r\n            <div formArrayName=\"prescriptions\" class=\"container\">\r\n                <div *ngFor=\"let prescription of prescriptions.controls; let i = index\" [formGroupName]=\"i\" class=\"card mb-3\">\r\n                  <div class=\"card-body\">\r\n                    <h4 class=\"card-title\">Prescription {{ i + 1 }}</h4>\r\n                    <div class=\"form-group\">\r\n                      <label for=\"medicineName\">Medicine Name</label>\r\n                      <input id=\"medicineName\" formControlName=\"medicineName\" class=\"form-control\" />\r\n                      <div *ngIf=\"prescription.get('medicineName')?.invalid && prescription.get('medicineName')?.touched\" class=\"text-danger\">\r\n                        Medicine name is required.\r\n                      </div>\r\n                    </div>\r\n              \r\n                    <div formGroupName=\"dosage\" class=\"form-group\">\r\n                      <label>Dosage</label>\r\n                      <div class=\"form-check\">\r\n                        <input type=\"checkbox\" formControlName=\"morning\" class=\"form-check-input\" id=\"morning{{i}}\" />\r\n                        <label class=\"form-check-label\" for=\"morning{{i}}\">Morning</label>\r\n                      </div>\r\n                      <div class=\"form-check\">\r\n                        <input type=\"checkbox\" formControlName=\"afternoon\" class=\"form-check-input\" id=\"afternoon{{i}}\" />\r\n                        <label class=\"form-check-label\" for=\"afternoon{{i}}\">Afternoon</label>\r\n                      </div>\r\n                      <div class=\"form-check\">\r\n                        <input type=\"checkbox\" formControlName=\"evening\" class=\"form-check-input\" id=\"evening{{i}}\" />\r\n                        <label class=\"form-check-label\" for=\"evening{{i}}\">Evening</label>\r\n                      </div>\r\n                    </div>\r\n              \r\n                    <div class=\"form-group\">\r\n                      <div class=\"form-check\">\r\n                        <input type=\"checkbox\" formControlName=\"afterMeals\" class=\"form-check-input\" id=\"afterMeals{{i}}\" />\r\n                        <label class=\"form-check-label\" for=\"afterMeals{{i}}\">After Meals</label>\r\n                      </div>\r\n                    </div>\r\n              \r\n                    <div class=\"form-group\">\r\n                      <label for=\"duration{{i}}\">Duration (days)</label>\r\n                      <input id=\"duration{{i}}\" type=\"number\" formControlName=\"duration\" class=\"form-control\" />\r\n                      <div *ngIf=\"prescription.get('duration')?.invalid && prescription.get('duration')?.touched\" class=\"text-danger\">\r\n                        Duration is required and must be at least 1 day.\r\n                      </div>\r\n                    </div>\r\n              \r\n                    <button type=\"button\" (click)=\"removePrescription(i)\" class=\"btn btn-danger\">Remove Prescription</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button type=\"button\"  class=\"btn btn-primary\" (click)=\"addPrescription()\">Add Prescription</button>\r\n           \r\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"visitForm.invalid\">Add Visit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- <div *ngIf=\"patientDetails\">\r\n    <h2>Patient Details</h2>\r\n    <p>Name: {{ patientDetails.name }}</p>\r\n    <p>Mobile Number: {{ patientDetails.mobileNumber }}</p>\r\n    <p>Condition: {{ patientDetails.condition }}</p>\r\n\r\n  </div> -->\r\n\r\n  <!-- <form [formGroup]=\"visitForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"grid-container\">\r\n      <div class=\"grid-item\">\r\n        <label for=\"symptoms\">Symptoms</label>\r\n        <input id=\"symptoms\" formControlName=\"symptoms\" />\r\n        <div *ngIf=\"visitForm.get('symptoms')?.invalid && visitForm.get('symptoms')?.touched\" class=\"error\">\r\n          Symptoms are required.\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"grid-item\">\r\n        <label for=\"treatment\">Treatment</label>\r\n        <input id=\"treatment\" formControlName=\"treatment\" />\r\n        <div *ngIf=\"visitForm.get('treatment')?.invalid && visitForm.get('treatment')?.touched\" class=\"error\">\r\n          Treatment is required.\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"grid-item\">\r\n        <label for=\"advice\">Advice</label>\r\n        <input id=\"advice\" formControlName=\"advice\" />\r\n        <div *ngIf=\"visitForm.get('advice')?.invalid && visitForm.get('advice')?.touched\" class=\"error\">\r\n          Advice is required.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  \r\n    <div formArrayName=\"prescriptions\">\r\n      <div *ngFor=\"let prescription of prescriptions.controls; let i = index\" [formGroupName]=\"i\" class=\"prescription-item\">\r\n        <h4>Prescription {{ i + 1 }}</h4>\r\n        <div>\r\n          <label for=\"medicineName\">Medicine Name</label>\r\n          <input id=\"medicineName\" formControlName=\"medicineName\" />\r\n          <div *ngIf=\"prescription.get('medicineName')?.invalid && prescription.get('medicineName')?.touched\" class=\"error\">\r\n            Medicine name is required.\r\n          </div>\r\n        </div>\r\n  \r\n        <div>\r\n          <label>Dosage</label>\r\n          <div class=\"btn-group\" role=\"group\">\r\n            <button type=\"button\" class=\"btn\" [ngClass]=\"{'btn-primary': prescription.get('dosage.morning')?.value, 'btn-outline-primary': !prescription.get('dosage.morning')?.value}\" (click)=\"toggleDosage(prescription as FormGroup, 'morning')\">Morning</button>\r\n            <button type=\"button\" class=\"btn\" [ngClass]=\"{'btn-primary': prescription.get('dosage.afternoon')?.value, 'btn-outline-primary': !prescription.get('dosage.afternoon')?.value}\" (click)=\"toggleDosage(prescription as FormGroup, 'afternoon')\">Afternoon</button>\r\n            <button type=\"button\" class=\"btn\" [ngClass]=\"{'btn-primary': prescription.get('dosage.evening')?.value, 'btn-outline-primary': !prescription.get('dosage.evening')?.value}\" (click)=\"toggleDosage(prescription as FormGroup, 'evening')\">Evening</button>\r\n          </div>\r\n        </div>\r\n  \r\n        <div>\r\n          <label>Time of Dosage</label>\r\n          <div class=\"btn-group\" role=\"group\">\r\n            <button type=\"button\" class=\"btn\" [ngClass]=\"{'btn-primary': !prescription.get('afterMeals')?.value, 'btn-outline-primary': prescription.get('afterMeals')?.value}\" (click)=\"toggleMealTime(prescription as FormGroup, false)\">Before Meals</button>\r\n            <button type=\"button\" class=\"btn\" [ngClass]=\"{'btn-primary': prescription.get('afterMeals')?.value, 'btn-outline-primary': !prescription.get('afterMeals')?.value}\" (click)=\"toggleMealTime(prescription as FormGroup, true)\">After Meals</button>\r\n          </div>\r\n        </div>\r\n  \r\n        <div>\r\n          <label for=\"duration\">Duration (Days)</label>\r\n          <input id=\"duration\" type=\"number\" formControlName=\"duration\" />\r\n          <div *ngIf=\"prescription.get('duration')?.invalid && prescription.get('duration')?.touched\" class=\"error\">\r\n            Duration is required and must be at least 1 day.\r\n          </div>\r\n        </div>\r\n  \r\n        <button type=\"button\" (click)=\"removePrescription(i)\" class=\"btn btn-danger\">Delete</button>\r\n      </div>\r\n    </div>\r\n  \r\n    <button type=\"button\" (click)=\"addPrescription()\" class=\"btn btn-primary\">Add Prescription</button>\r\n    <button type=\"submit\" class=\"btn btn-success\">Save</button>\r\n  </form> -->\r\n  \r\n  <style>\r\n    .grid-container {\r\n      display: grid;\r\n      grid-template-columns: repeat(2, 1fr);\r\n      gap: 20px;\r\n    }\r\n  \r\n    .grid-item {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n  \r\n    .prescription-item {\r\n      margin-bottom: 20px;\r\n      padding: 10px;\r\n      border: 1px solid #ccc;\r\n      border-radius: 5px;\r\n    }\r\n  \r\n    .error {\r\n      color: red;\r\n      font-size: 0.8em;\r\n    }\r\n  \r\n    .btn-group .btn {\r\n      margin-right: 5px;\r\n    }\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}