{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../../src/services/auth/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction NavigationComponent_a_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 9);\n    i0.ɵɵtext(1, \"Visits\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NavigationComponent_a_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 10);\n    i0.ɵɵtext(1, \"Patient\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NavigationComponent_a_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 11);\n    i0.ɵɵtext(1, \"Login\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NavigationComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 12)(1, \"span\", 12);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 13);\n    i0.ɵɵlistener(\"click\", function NavigationComponent_span_10_Template_a_click_3_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onLogout());\n    });\n    i0.ɵɵtext(4, \" Logout\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Welcome, \", ctx_r1.currentUser, \"\");\n  }\n}\nexport class NavigationComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.currentUser = ''; // Replace 'any' with the actual type of your user data\n  }\n  ngOnInit() {\n    this.authService.getCurrentUser().subscribe(user => this.currentUser = user, error => console.error(error));\n  }\n  onLogout() {\n    this.authService.logout();\n  }\n  static {\n    this.ɵfac = function NavigationComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || NavigationComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: NavigationComponent,\n      selectors: [[\"app-navigation\"]],\n      decls: 11,\n      vars: 4,\n      consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [\"href\", \"#\", 1, \"navbar-brand\"], [1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"ms-auto\"], [1, \"nav-item\"], [\"class\", \"nav-link\", \"routerLink\", \"/visits\", \"routerLinkActive\", \"active\", 4, \"ngIf\"], [\"routerLink\", \"/patient\", 4, \"ngIf\"], [\"class\", \"nav-link\", \"routerLink\", \"/login\", 4, \"ngIf\"], [\"class\", \"white\", 4, \"ngIf\"], [\"routerLink\", \"/visits\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [\"routerLink\", \"/patient\"], [\"routerLink\", \"/login\", 1, \"nav-link\"], [1, \"white\"], [\"routerLink\", \"/logout\", 1, \"nav-link\", 3, \"click\"]],\n      template: function NavigationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"nav\", 0)(1, \"a\", 1);\n          i0.ɵɵtext(2, \"MMS Hospital\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"ul\", 3)(5, \"li\", 4);\n          i0.ɵɵtemplate(6, NavigationComponent_a_6_Template, 2, 0, \"a\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, NavigationComponent_a_7_Template, 2, 0, \"a\", 6);\n          i0.ɵɵelementStart(8, \"li\", 4);\n          i0.ɵɵtemplate(9, NavigationComponent_a_9_Template, 2, 0, \"a\", 7)(10, NavigationComponent_span_10_Template, 5, 1, \"span\", 8);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.authService.isLoggedIn());\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.authService.isLoggedIn());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.authService.isLoggedIn());\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.authService.isLoggedIn());\n        }\n      },\n      dependencies: [i2.NgIf, i3.RouterLink, i3.RouterLinkActive],\n      styles: [\".white[_ngcontent-%COMP%] {\\n  color: #fff;\\n}\\n\\n.active[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vY29waWxvdCUyMGFuZ3VsYXIlMjBob3NwaXRhbC9Db3BpbG90LXRyYWluaW5nL3NyYy9hcHAvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQ0NKOztBRENBO0VBQ0ksVUFBQTtBQ0VKIiwic291cmNlc0NvbnRlbnQiOlsiLndoaXRle1xyXG4gICAgY29sb3I6I2ZmZlxyXG59XHJcbi5hY3RpdmUge1xyXG4gICAgY29sb3I6IHJlZDtcclxuICB9IiwiLndoaXRlIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5hY3RpdmUge1xuICBjb2xvcjogcmVkO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NavigationComponent_span_10_Template_a_click_3_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","onLogout","ɵɵadvance","ɵɵtextInterpolate1","currentUser","NavigationComponent","constructor","authService","ngOnInit","getCurrentUser","subscribe","user","error","console","logout","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","NavigationComponent_Template","rf","ctx","ɵɵtemplate","NavigationComponent_a_6_Template","NavigationComponent_a_7_Template","NavigationComponent_a_9_Template","NavigationComponent_span_10_Template","ɵɵproperty","isLoggedIn"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\navigation\\navigation.component.ts","E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\navigation\\navigation.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './../../../src/services/auth/auth.service'; // Import the AuthService\r\n\r\n@Component({\r\n  selector: 'app-navigation',\r\n  templateUrl: './navigation.component.html',\r\n  styleUrls: ['./navigation.component.scss']\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  currentUser: string= ''; // Replace 'any' with the actual type of your user data\r\n\r\n  constructor(public authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getCurrentUser().subscribe(\r\n      (user: any) => this.currentUser = user,\r\n      (error: Error) => console.error(error)\r\n    );\r\n  }\r\n\r\n  onLogout(): void {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","\r\n\r\n<!-- Dark Themed Navigation Bar -->\r\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">MMS Hospital</a>\r\n    <div class=\"collapse navbar-collapse\">\r\n        <ul class=\"navbar-nav ms-auto\">\r\n            <li class=\"nav-item\">\r\n                <a *ngIf=\"authService.isLoggedIn()\" class=\"nav-link\" routerLink=\"/visits\" routerLinkActive=\"active\">Visits</a>\r\n            </li>\r\n            <!-- Other menu links -->\r\n    <!-- <li *ngIf=\"userType === 'receptionist'\"> -->\r\n        <a *ngIf=\"authService.isLoggedIn()\" routerLink=\"/patient\">Patient</a>\r\n      <!-- </li> -->\r\n            <li class=\"nav-item\">\r\n                <!-- <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a> -->\r\n                <a class=\"nav-link\" *ngIf=\"!authService.isLoggedIn()\" routerLink=\"/login\">Login</a>\r\n                <span class=\"white\" *ngIf=\"authService.isLoggedIn()\">\r\n                    <span  class=\"white\">Welcome, {{ currentUser}}</span>\r\n                  <a class=\"nav-link\" routerLink=\"/logout\" (click)=\"onLogout()\">   Logout</a>\r\n                </span>\r\n                <!-- Include menu link for patient to be displayed only for Receptionist and press enter  -->\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n"],"mappings":";;;;;;ICQgBA,EAAA,CAAAC,cAAA,WAAoG;IAAAD,EAAA,CAAAE,MAAA,aAAM;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAItHH,EAAA,CAAAC,cAAA,YAA0D;IAAAD,EAAA,CAAAE,MAAA,cAAO;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAI7DH,EAAA,CAAAC,cAAA,YAA0E;IAAAD,EAAA,CAAAE,MAAA,YAAK;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;;IAE/EH,EADJ,CAAAC,cAAA,eAAqD,eAC5B;IAAAD,EAAA,CAAAE,MAAA,GAAyB;IAAAF,EAAA,CAAAG,YAAA,EAAO;IACvDH,EAAA,CAAAC,cAAA,YAA8D;IAArBD,EAAA,CAAAI,UAAA,mBAAAC,wDAAA;MAAAL,EAAA,CAAAM,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAR,EAAA,CAAAS,aAAA;MAAA,OAAAT,EAAA,CAAAU,WAAA,CAASF,MAAA,CAAAG,QAAA,EAAU;IAAA,EAAC;IAAIX,EAAA,CAAAE,MAAA,cAAM;IACzEF,EADyE,CAAAG,YAAA,EAAI,EACtE;;;;IAFkBH,EAAA,CAAAY,SAAA,GAAyB;IAAzBZ,EAAA,CAAAa,kBAAA,cAAAL,MAAA,CAAAM,WAAA,KAAyB;;;ADVlE,OAAM,MAAOC,mBAAmB;EAG9BC,YAAmBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAF9B,KAAAH,WAAW,GAAU,EAAE,CAAC,CAAC;EAEsB;EAE/CI,QAAQA,CAAA;IACN,IAAI,CAACD,WAAW,CAACE,cAAc,EAAE,CAACC,SAAS,CACxCC,IAAS,IAAK,IAAI,CAACP,WAAW,GAAGO,IAAI,EACrCC,KAAY,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACvC;EACH;EAEAX,QAAQA,CAAA;IACN,IAAI,CAACM,WAAW,CAACO,MAAM,EAAE;EAC3B;;;uCAdWT,mBAAmB,EAAAf,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAnBZ,mBAAmB;MAAAa,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCJ5BlC,EADJ,CAAAC,cAAA,aAAyD,WACpB;UAAAD,EAAA,CAAAE,MAAA,mBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAGzCH,EAFR,CAAAC,cAAA,aAAsC,YACH,YACN;UACjBD,EAAA,CAAAoC,UAAA,IAAAC,gCAAA,eAAoG;UACxGrC,EAAA,CAAAG,YAAA,EAAK;UAGTH,EAAA,CAAAoC,UAAA,IAAAE,gCAAA,eAA0D;UAEtDtC,EAAA,CAAAC,cAAA,YAAqB;UAGjBD,EADA,CAAAoC,UAAA,IAAAG,gCAAA,eAA0E,KAAAC,oCAAA,kBACrB;UAQrExC,EAHY,CAAAG,YAAA,EAAK,EACJ,EACH,EACJ;;;UAjBcH,EAAA,CAAAY,SAAA,GAA8B;UAA9BZ,EAAA,CAAAyC,UAAA,SAAAN,GAAA,CAAAlB,WAAA,CAAAyB,UAAA,GAA8B;UAItC1C,EAAA,CAAAY,SAAA,EAA8B;UAA9BZ,EAAA,CAAAyC,UAAA,SAAAN,GAAA,CAAAlB,WAAA,CAAAyB,UAAA,GAA8B;UAIL1C,EAAA,CAAAY,SAAA,GAA+B;UAA/BZ,EAAA,CAAAyC,UAAA,UAAAN,GAAA,CAAAlB,WAAA,CAAAyB,UAAA,GAA+B;UAC/B1C,EAAA,CAAAY,SAAA,EAA8B;UAA9BZ,EAAA,CAAAyC,UAAA,SAAAN,GAAA,CAAAlB,WAAA,CAAAyB,UAAA,GAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}