{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../src/services/patients/patients.service\";\nimport * as i3 from \"src/services/auth/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = () => [\"/register-patient\"];\nconst _c1 = () => [\"add-visit/{{ this.patientId}}\"];\nconst _c2 = a0 => [\"/add-visit\", a0];\nfunction PatientComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction PatientComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"button\", 9);\n    i0.ɵɵtext(5, \" Register New Patient \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nfunction PatientComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PatientComponent_div_9_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r0 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r0.addVisit());\n    });\n    i0.ɵɵtext(5, \" Add Patient Visit \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(1, _c1));\n  }\n}\nfunction PatientComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 11)(2, \"div\", 12)(3, \"h2\", 13);\n    i0.ɵɵtext(4, \"Patient Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 14);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\", 14);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\", 14);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 15);\n    i0.ɵɵtext(12, \"Add Visit\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"ID: \", ctx_r0.patient.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Name: \", ctx_r0.patient.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Mobile Number: \", ctx_r0.patient.mobileNumber, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(4, _c2, ctx_r0.patient.id));\n  }\n}\nfunction PatientComponent_div_11_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"div\", 12);\n    i0.ɵɵelement(3, \"h5\", 13)(4, \"p\", 14);\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Patient Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\")(10, \"strong\");\n    i0.ɵɵtext(11, \"Condition:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\")(14, \"strong\");\n    i0.ɵɵtext(15, \"Treatment:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const visit_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.user.name, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", visit_r3.condition, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", visit_r3.treatment, \"\");\n  }\n}\nfunction PatientComponent_div_11_tr_28_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const medicine_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicine_r4.medicineName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicine_r4.dosage);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicine_r4.afterMeal ? \"Yes\" : \"No\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 5, medicine_r4.durationDate, \"MMM dd, yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(medicine_r4.advice);\n  }\n}\nfunction PatientComponent_div_11_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, PatientComponent_div_11_tr_28_ng_container_1_Template, 12, 8, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const visit_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", visit_r5.prescriptions);\n  }\n}\nfunction PatientComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 16)(2, \"h2\");\n    i0.ɵɵtext(3, \"Visit Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 1)(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Doctor Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, PatientComponent_div_11_div_9_Template, 17, 3, \"div\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\")(11, \"br\");\n    i0.ɵɵelementStart(12, \"h3\");\n    i0.ɵɵtext(13, \"Prescribed Medicine\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"table\", 18)(15, \"thead\")(16, \"tr\")(17, \"th\");\n    i0.ɵɵtext(18, \"Medicine Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"th\");\n    i0.ɵɵtext(20, \"Dosage\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"th\");\n    i0.ɵɵtext(22, \"After Meal\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"th\");\n    i0.ɵɵtext(24, \"Duration Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"th\");\n    i0.ɵɵtext(26, \"Advice\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"tbody\");\n    i0.ɵɵtemplate(28, PatientComponent_div_11_tr_28_Template, 2, 1, \"tr\", 19);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.currentUser, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.vpatient.visits);\n    i0.ɵɵadvance(19);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.vpatient.visits);\n  }\n}\nexport class PatientComponent {\n  constructor(router, patientService, authservice) {\n    this.router = router;\n    this.patientService = patientService;\n    this.authservice = authservice;\n    this.patientNotFound = false;\n    this.patientId = 1; // Replace with the actual patient ID\n    this.mobileNumber = ''; // Initialize the property\n    this.patient = {};\n    this.vpatient = {\n      visits: []\n    };\n    this.errorMessage = '';\n    this.visit = []; // Replace 'any' with the actual type of your visit data\n    // patient: any; // Replace 'any' with the actual type of your patient data\n    this.isdoctor = false; // Replace 'any' with the actual type of your doctor data\n    this.currentUser = '';\n  }\n  ngOnInit() {\n    this.patientId = 0; // Replace with the actual patient ID\n    this.getuserinfo();\n  }\n  getuserinfo() {\n    this.patientService.getPatient(this.patientId).subscribe(\n    // here we need to get the patient detials\n    user => {\n      this.user = user;\n      this.vpatient.visits = user.visits;\n      // this.visitsService.getVisits(patientId).subscribe(\n      //   visit => {\n      //     this.visit = visit;\n      this.patientService.getPatient(this.patientId).subscribe(patient => this.patient = patient, error => {\n        errorMessage: 'Error fetching patient details';\n        console.error(error);\n      });\n      this.authservice.getCurrentUser()(user1 => {\n        if (user1) {\n          console.log('currentUser:', user1);\n          this.currentUser = user1;\n          if (user1.role === 'doctor') {\n            this.isdoctor = true;\n          }\n        }\n      }, error => {\n        errorMessage: 'Get user data service error';\n        console.error(error);\n      });\n    }, error => {\n      errorMessage: 'Get patient data service error';\n      console.error(error);\n    });\n  }\n  searchPatient() {\n    if (this.mobileNumber) {\n      this.patientService.searchPatientByMobile(this.mobileNumber).subscribe(patient => {\n        if (patient) {\n          this.patientNotFound = false;\n          if (Array.isArray(patient)) {\n            this.patient = patient[0]; // It's an array\n            this.patientId = patient[0].id;\n          } else {\n            this.patient = patient; // Assume it's a single object\n          }\n          // this.patient = patient[0];\n          // this.patientId = patient[0].id;\n          this.getuserinfo();\n        } else {\n          this.patientNotFound = true;\n          console.error('Patient not found');\n        }\n        error => {\n          this.patientNotFound = true;\n          console.error('Error fetching patient:', error);\n        };\n      });\n    } else {\n      console.error('Mobile number is not provided');\n    }\n  }\n  addVisit() {\n    this.router.navigate(['/add-visit', this.patientId]);\n  }\n  static {\n    this.ɵfac = function PatientComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PatientComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PatientsService), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PatientComponent,\n      selectors: [[\"app-patient\"]],\n      decls: 12,\n      vars: 6,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"input-group\", \"mb-3\"], [\"placeholder\", \"Enter mobile number\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"btn\", \"btn-primary\", \"mb-3\", 3, \"routerLink\"], [1, \"btn\", \"btn-primary\", \"mb-3\", 3, \"click\", \"routerLink\"], [1, \"card\", \"mb-4\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"btn\", \"btn-secondary\", \"mt-3\", 3, \"routerLink\"], [1, \"container\"], [\"class\", \"col-md-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\"], [1, \"card\"]],\n      template: function PatientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.mobileNumber, $event) || (ctx.mobileNumber = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function PatientComponent_Template_button_click_5_listener() {\n            return ctx.searchPatient();\n          });\n          i0.ɵɵtext(6, \"Search\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(7, PatientComponent_div_7_Template, 2, 1, \"div\", 6)(8, PatientComponent_div_8_Template, 6, 2, \"div\", 7)(9, PatientComponent_div_9_Template, 6, 2, \"div\", 7)(10, PatientComponent_div_10_Template, 13, 6, \"div\", 7)(11, PatientComponent_div_11_Template, 29, 3, \"div\", 7);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mobileNumber);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.patientNotFound);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isdoctor);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.patient);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.patient);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i1.RouterLink, i4.DatePipe],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","ɵɵproperty","ɵɵpureFunction0","_c0","ɵɵlistener","PatientComponent_div_9_Template_button_click_4_listener","ɵɵrestoreView","_r2","ɵɵnextContext","ɵɵresetView","addVisit","_c1","ɵɵtextInterpolate1","patient","id","name","mobileNumber","ɵɵpureFunction1","_c2","ɵɵelement","user","visit_r3","condition","treatment","ɵɵelementContainerStart","medicine_r4","medicineName","dosage","afterMeal","ɵɵpipeBind2","durationDate","advice","ɵɵtemplate","PatientComponent_div_11_tr_28_ng_container_1_Template","visit_r5","prescriptions","PatientComponent_div_11_div_9_Template","PatientComponent_div_11_tr_28_Template","currentUser","vpatient","visits","PatientComponent","constructor","router","patientService","authservice","patientNotFound","patientId","visit","isdoctor","ngOnInit","getuserinfo","getPatient","subscribe","error","console","getCurrentUser","user1","log","role","searchPatient","searchPatientByMobile","Array","isArray","navigate","ɵɵdirectiveInject","i1","Router","i2","PatientsService","i3","AuthService","selectors","decls","vars","consts","template","PatientComponent_Template","rf","ctx","ɵɵtwoWayListener","PatientComponent_Template_input_ngModelChange_4_listener","$event","ɵɵtwoWayBindingSet","PatientComponent_Template_button_click_5_listener","PatientComponent_div_7_Template","PatientComponent_div_8_Template","PatientComponent_div_9_Template","PatientComponent_div_10_Template","PatientComponent_div_11_Template","ɵɵtwoWayProperty"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\patient\\patient.component.ts","E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\patient\\patient.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { PatientsService } from '../../../src/services/patients/patients.service'; // Adjust the path as necessary\r\n import { Patient } from '../../../src/models/patient'; // Adjust the path as necessary\r\n import { AuthService } from 'src/services/auth/auth.service';\r\n import { Router } from '@angular/router';\r\n// import { get } from 'http';\r\n\r\n interface Visit {\r\n  condition: any;\r\n  \r\n    id: number;\r\n    date: string;\r\n    time: string;\r\n    treatment: string;\r\n    // Add other properties as needed\r\n    prescriptions: [\r\n      {\r\n        medicineName: string;\r\n                dosage: string;\r\n                medicineCount: number;\r\n                afterMeal: boolean;\r\n              durationDate: string;\r\n              advice: string\r\n      }\r\n    ]\r\n  }\r\n  \r\n\r\n@Component({\r\n  selector: 'app-patient',\r\n  templateUrl: './patient.component.html',\r\n  styleUrls: ['./patient.component.scss'],\r\n \r\n})\r\nexport class PatientComponent implements OnInit {\r\n  patientNotFound: boolean = false;\r\n  patientId: number= 1 ; // Replace with the actual patient ID\r\n  mobileNumber: string = ''; // Initialize the property\r\n  patient: Patient = {} as Patient;\r\n  vpatient = {\r\n    visits: [] as Visit[]\r\n  };\r\n  errorMessage = '';\r\n  \r\n  visit:any[] = []; // Replace 'any' with the actual type of your visit data\r\n // patient: any; // Replace 'any' with the actual type of your patient data\r\n  isdoctor:boolean = false;  // Replace 'any' with the actual type of your doctor data\r\n  user: any;\r\n   currentUser: string = '';\r\n\r\n  constructor(private router: Router,private patientService: PatientsService, private authservice:AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n     this.patientId = 0; // Replace with the actual patient ID\r\n     this.getuserinfo();\r\n   \r\n    } \r\n   \r\n    getuserinfo(){\r\n      this.patientService.getPatient(this.patientId).subscribe( // here we need to get the patient detials\r\n        (user: any) => {\r\n          this.user = user;\r\n          this.vpatient.visits = user.visits;\r\n        \r\n        // this.visitsService.getVisits(patientId).subscribe(\r\n        //   visit => {\r\n        //     this.visit = visit;\r\n            this.patientService.getPatient(this.patientId).subscribe(\r\n              patient => this.patient = patient,\r\n              \r\n              error =>{\r\n                errorMessage: 'Error fetching patient details';\r\n                console.error(error)\r\n              } \r\n            );\r\n            this.authservice.getCurrentUser()(\r\n              (user1: any) => {\r\n                if(user1){\r\n                  console.log('currentUser:', user1);\r\n                  this.currentUser = user1;\r\n                  if(user1.role === 'doctor'){\r\n                    this.isdoctor = true;\r\n                  }\r\n              }\r\n            },\r\n              (error: Error) => {\r\n                errorMessage: 'Get user data service error';\r\n                console.error(error)\r\n              }\r\n\r\n            );\r\n          \r\n          },\r\n          error =>{\r\n            errorMessage: 'Get patient data service error';\r\n            console.error(error)\r\n          } \r\n        );\r\n\r\n    }\r\n\r\n  searchPatient(): void {\r\n    \r\n    if (this.mobileNumber) {\r\n    this.patientService.searchPatientByMobile(this.mobileNumber).subscribe(\r\n      (patient: Patient) =>{\r\n        if(patient){\r\n         this.patientNotFound = false;\r\n         if (Array.isArray(patient)) {\r\n          this.patient = patient[0]; // It's an array\r\n          this.patientId = patient[0].id;\r\n            } else {\r\n                this.patient = patient; // Assume it's a single object\r\n            }\r\n          // this.patient = patient[0];\r\n          // this.patientId = patient[0].id;\r\n\r\n          this.getuserinfo();\r\n        } else {\r\n          this.patientNotFound = true;\r\n          console.error('Patient not found');\r\n      } \r\n      (error: Error) => {\r\n        this.patientNotFound = true;\r\n        console.error('Error fetching patient:', error)\r\n      }\r\n    }\r\n    );\r\n  } else {\r\n    console.error('Mobile number is not provided');\r\n  }\r\n  }\r\n\r\n  addVisit(): void {\r\n    this.router.navigate(['/add-visit', this.patientId]);\r\n  }\r\n}\r\n","<div class=\"container mt-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"input-group mb-3\">\r\n    <input [(ngModel)]=\"mobileNumber\" class=\"form-control\" placeholder=\"Enter mobile number\" />\r\n    <button class=\"btn btn-primary\" (click)=\"searchPatient()\">Search</button>\r\n  </div>\r\n  <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{errorMessage}}</div>\r\n  <div *ngIf=\"patientNotFound\">\r\n  <div class=\"container mt-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <button class=\"btn btn-primary mb-3\" [routerLink]=\"['/register-patient']\">\r\n          Register New Patient\r\n        </button>\r\n\r\n        </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf=\"isdoctor\">\r\n        <div class=\"container mt-4\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <button (click)=\"addVisit()\" class=\"btn btn-primary mb-3\" [routerLink]=\"['add-visit/{{ this.patientId}}']\">\r\n               Add Patient Visit\r\n              </button>\r\n      \r\n              </div>\r\n              </div>\r\n              </div>\r\n          </div>\r\n\r\n  <div *ngIf=\"patient\">\r\n    <div  class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n    <h2 class=\"card-title\">Patient Details</h2>\r\n    <p class=\"card-text\" >ID: {{ patient.id }}</p>\r\n    <p class=\"card-text\">Name: {{ patient.name }}</p>\r\n    <p class=\"card-text\">Mobile Number: {{ patient.mobileNumber }}</p>\r\n    <!-- Display other patient details as necessary -->\r\n    <button class=\"btn btn-secondary mt-3\" [routerLink]=\"['/add-visit', patient.id]\">Add Visit</button>\r\n  <!-- </div> -->\r\n</div>\r\n</div>\r\n</div>\r\n\r\n<div *ngIf=\"patient\">\r\n  <div class=\"container\">\r\n    <h2>Visit Details</h2>\r\n    <div class=\"row\">\r\n       <p><strong>Doctor Name:</strong>{{this.currentUser}} </p>\r\n        <div class=\"col-md-3\" *ngFor=\"let visit of vpatient.visits\">\r\n        \r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\"></h5>\r\n                    <p class=\"card-text\"></p>\r\n                   \r\n                    <p><strong>Patient Name:</strong> {{this.user.name}}</p>\r\n                    <p><strong>Condition:</strong>{{visit.condition}} </p>\r\n                    <p><strong>Treatment:</strong> {{visit.treatment}}</p>\r\n                    <!-- <button class=\"btn btn-primary\" >View Details</button> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n     <br>\r\n     <br>           \r\n   \r\n  \r\n    <h3>Prescribed Medicine</h3>\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Medicine Name</th>\r\n          <th>Dosage</th>\r\n          <th>After Meal</th>\r\n          <th>Duration Date</th>\r\n          <th>Advice</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let visit of vpatient.visits\">\r\n          <ng-container *ngFor=\"let medicine of visit.prescriptions\">\r\n        \r\n          <td>{{medicine.medicineName}}</td>\r\n          <td>{{medicine.dosage}}</td>\r\n          <td>{{medicine.afterMeal ? 'Yes' : 'No'}}</td>\r\n          <td>{{medicine.durationDate | date:'MMM dd, yyyy'}}</td>\r\n          <td>{{medicine.advice}}</td>\r\n    \r\n      </ng-container>\r\n    </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n</div>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n   \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}