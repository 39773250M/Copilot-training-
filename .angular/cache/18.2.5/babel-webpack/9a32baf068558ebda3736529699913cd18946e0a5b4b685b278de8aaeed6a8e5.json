{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class PatientRegistrationComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.newPatient = {\n      name: '',\n      mobileNumber: ''\n    };\n  }\n  registerPatient() {\n    const patientData = {\n      name: this.newPatient.name,\n      mobileNumber: this.newPatient.mobileNumber,\n      type: 'patient',\n      password: 'pwd'\n    };\n    this.http.post('/users', patientData).subscribe(response => {\n      console.log('Patient registered successfully:', response);\n      this.router.navigate(['/patients']);\n    }, error => {\n      console.error('Error registering patient:', error);\n    });\n  }\n  static {\n    this.ɵfac = function PatientRegistrationComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PatientRegistrationComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PatientRegistrationComponent,\n      selectors: [[\"app-patient-registration\"]],\n      decls: 18,\n      vars: 2,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\", \"mb-4\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"mobileNumber\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"mobileNumber\", \"name\", \"mobileNumber\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n      template: function PatientRegistrationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n          i0.ɵɵtext(6, \"Register New Patient\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function PatientRegistrationComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.registerPatient();\n          });\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function PatientRegistrationComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newPatient.name, $event) || (ctx.newPatient.name = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n          i0.ɵɵtext(14, \"Mobile Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"input\", 11);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function PatientRegistrationComponent_Template_input_ngModelChange_15_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newPatient.mobileNumber, $event) || (ctx.newPatient.mobileNumber = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"button\", 12);\n          i0.ɵɵtext(17, \"Register\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newPatient.name);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newPatient.mobileNumber);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n      styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}","map":{"version":3,"names":["PatientRegistrationComponent","constructor","http","router","newPatient","name","mobileNumber","registerPatient","patientData","type","password","post","subscribe","response","console","log","navigate","error","i0","ɵɵdirectiveInject","i1","HttpClient","i2","Router","selectors","decls","vars","consts","template","PatientRegistrationComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","PatientRegistrationComponent_Template_form_ngSubmit_7_listener","ɵɵtwoWayListener","PatientRegistrationComponent_Template_input_ngModelChange_11_listener","$event","ɵɵtwoWayBindingSet","PatientRegistrationComponent_Template_input_ngModelChange_15_listener","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\patient-registration\\patient-registration.component.ts","E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\patient-registration\\patient-registration.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-patient-registration',\r\n  templateUrl: './patient-registration.component.html',\r\n  styleUrls: ['./patient-registration.component.css']\r\n})\r\nexport class PatientRegistrationComponent {\r\n  newPatient: any = {\r\n    name: '',\r\n    mobileNumber: ''\r\n  };\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  registerPatient(): void {\r\n    const patientData = {\r\n      name: this.newPatient.name,\r\n      mobileNumber: this.newPatient.mobileNumber,\r\n      type: 'patient',\r\n      password: 'pwd'\r\n    };\r\n\r\n    this.http.post('/users', patientData).subscribe(\r\n      (response: any) => {\r\n        console.log('Patient registered successfully:', response);\r\n        this.router.navigate(['/patients']);\r\n      },\r\n      (error: any) => {\r\n        console.error('Error registering patient:', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container mt-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card mb-4\">\r\n          <div class=\"card-body\">\r\n            <h2 class=\"card-title\">Register New Patient</h2>\r\n            <form (ngSubmit)=\"registerPatient()\">\r\n              <div class=\"mb-3\">\r\n                <label for=\"name\" class=\"form-label\">Name</label>\r\n                <input type=\"text\" id=\"name\" class=\"form-control\" [(ngModel)]=\"newPatient.name\" name=\"name\" required>\r\n              </div>\r\n              <div class=\"mb-3\">\r\n                <label for=\"mobileNumber\" class=\"form-label\">Mobile Number</label>\r\n                <input type=\"text\" id=\"mobileNumber\" class=\"form-control\" [(ngModel)]=\"newPatient.mobileNumber\" name=\"mobileNumber\" required>\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-success\">Register</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}