{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../src/services/patients/patients.service\";\nimport * as i2 from \"src/services/auth/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction PatientComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"div\", 7);\n    i0.ɵɵelement(3, \"h5\", 8)(4, \"p\", 9);\n    i0.ɵɵelementStart(5, \"p\")(6, \"strong\");\n    i0.ɵɵtext(7, \"Patient Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"p\")(10, \"strong\");\n    i0.ɵɵtext(11, \"Condition:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"p\")(14, \"strong\");\n    i0.ɵɵtext(15, \"Treatment:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const visit_r1 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.user.name, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", visit_r1.condition, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", visit_r1.treatment, \"\");\n  }\n}\nexport class PatientComponent {\n  constructor(patientService, authservice) {\n    this.patientService = patientService;\n    this.authservice = authservice;\n    this.mobileNumber = ''; // Initialize the property\n    this.patient = {};\n    this.vpatient = {\n      visits: []\n    };\n    this.visit = []; // Replace 'any' with the actual type of your visit data\n    this.currentUser = '';\n  }\n  ngOnInit() {\n    const patientId = '3'; // Replace with the actual patient ID\n    this.patientService.getPatient(patientId).subscribe(\n    // here we need to get the patient detials\n    user => {\n      this.user = user;\n      this.vpatient.visits = user.visits;\n      // this.visitsService.getVisits(patientId).subscribe(\n      //   visit => {\n      //     this.visit = visit;\n      this.patientService.getPatient(patientId).subscribe(patient => this.patient = patient, error => console.error(error));\n      this.authservice.getCurrentUser()(user1 => this.currentUser = user1, error => console.error(error));\n    }, error => console.error(error));\n  }\n  searchPatient() {\n    if (this.mobileNumber) {\n      this.patientService.searchPatientByMobile(this.mobileNumber).subscribe(patient => this.patient = patient, error => console.error('Error fetching patient:', error));\n    } else {\n      console.error('Mobile number is not provided');\n    }\n  }\n  static {\n    this.ɵfac = function PatientComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PatientComponent)(i0.ɵɵdirectiveInject(i1.PatientsService), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PatientComponent,\n      selectors: [[\"app-patient\"]],\n      decls: 28,\n      vars: 6,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"input-group\", \"mb-3\"], [\"placeholder\", \"Enter mobile number\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"card\", \"mb-4\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"container\"], [\"class\", \"col-md-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\"], [1, \"card\"]],\n      template: function PatientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_4_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.mobileNumber, $event) || (ctx.mobileNumber = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function PatientComponent_Template_button_click_5_listener() {\n            return ctx.searchPatient();\n          });\n          i0.ɵɵtext(6, \"Search\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"h2\", 8);\n          i0.ɵɵtext(10, \"Patient Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"p\", 9);\n          i0.ɵɵtext(12);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"p\", 9);\n          i0.ɵɵtext(14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"p\", 9);\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(17, \"div\", 10)(18, \"h2\");\n          i0.ɵɵtext(19, \"Visit Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 1)(21, \"p\")(22, \"strong\");\n          i0.ɵɵtext(23, \"Doctor Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(24);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(25, PatientComponent_div_25_Template, 17, 3, \"div\", 11);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(26, \"br\")(27, \"br\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mobileNumber);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate1(\"ID: \", ctx.patient.id, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Name: \", ctx.patient.name, \"\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"Mobile Number: \", ctx.patient.mobileNumber, \"\");\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate1(\"\", ctx.currentUser, \" \");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.vpatient.visits);\n        }\n      },\n      dependencies: [i3.NgForOf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","user","name","visit_r1","condition","treatment","PatientComponent","constructor","patientService","authservice","mobileNumber","patient","vpatient","visits","visit","currentUser","ngOnInit","patientId","getPatient","subscribe","error","console","getCurrentUser","user1","searchPatient","searchPatientByMobile","ɵɵdirectiveInject","i1","PatientsService","i2","AuthService","selectors","decls","vars","consts","template","PatientComponent_Template","rf","ctx","ɵɵtwoWayListener","PatientComponent_Template_input_ngModelChange_4_listener","$event","ɵɵtwoWayBindingSet","ɵɵlistener","PatientComponent_Template_button_click_5_listener","ɵɵtemplate","PatientComponent_div_25_Template","ɵɵtwoWayProperty","id","ɵɵproperty"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\patient\\patient.component.ts","E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\patient\\patient.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { PatientsService } from '../../../src/services/patients/patients.service'; // Adjust the path as necessary\r\n import { Patient } from '../../../src/models/patient'; // Adjust the path as necessary\r\n import { AuthService } from 'src/services/auth/auth.service';\r\n\r\n interface Visit {\r\n  condition: any;\r\n  \r\n    id: number;\r\n    date: string;\r\n    time: string;\r\n    treatment: string;\r\n    // Add other properties as needed\r\n    prescriptions: [\r\n      {\r\n        medicineName: string;\r\n                dosage: string;\r\n                medicineCount: number;\r\n                afterMeal: boolean;\r\n              durationDate: string;\r\n              advice: string\r\n      }\r\n    ]\r\n  }\r\n  \r\n\r\n@Component({\r\n  selector: 'app-patient',\r\n  templateUrl: './patient.component.html',\r\n  styleUrls: ['./patient.component.scss'],\r\n \r\n})\r\nexport class PatientComponent implements OnInit {\r\n  mobileNumber: string = ''; // Initialize the property\r\n  patient: Patient = {} as Patient;\r\n  vpatient = {\r\n    visits: [] as Visit[]\r\n  };\r\n  \r\n  visit:any[] = []; // Replace 'any' with the actual type of your visit data\r\n // patient: any; // Replace 'any' with the actual type of your patient data\r\n  doctor: any; // Replace 'any' with the actual type of your doctor data\r\n  user: any;\r\n   currentUser: string = '';\r\n\r\n  constructor(private patientService: PatientsService, private authservice:AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    const patientId = '3'; // Replace with the actual patient ID\r\n    this.patientService.getPatient(patientId).subscribe( // here we need to get the patient detials\r\n      (user: any) => {\r\n        this.user = user;\r\n        this.vpatient.visits = user.visits;\r\n      \r\n      // this.visitsService.getVisits(patientId).subscribe(\r\n      //   visit => {\r\n      //     this.visit = visit;\r\n          this.patientService.getPatient(patientId).subscribe(\r\n            patient => this.patient = patient,\r\n            error => console.error(error)\r\n          );\r\n          this.authservice.getCurrentUser()(\r\n            (user1: any) => this.currentUser = user1,\r\n            (error: Error) => console.error(error)\r\n          );\r\n        \r\n        },\r\n        error => console.error(error)\r\n      );\r\n    } \r\n   \r\n  searchPatient(): void {\r\n    \r\n    if (this.mobileNumber) {\r\n    this.patientService.searchPatientByMobile(this.mobileNumber).subscribe(\r\n      (patient: Patient) => this.patient = patient,\r\n      (error: Error) => console.error('Error fetching patient:', error)\r\n    );\r\n  } else {\r\n    console.error('Mobile number is not provided');\r\n  }\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"input-group mb-3\">\r\n    <input [(ngModel)]=\"mobileNumber\" class=\"form-control\" placeholder=\"Enter mobile number\" />\r\n    <button class=\"btn btn-primary\" (click)=\"searchPatient()\">Search</button>\r\n  </div>\r\n  \r\n  <!-- <div *ngIf=\"patient\"> -->\r\n    <div  class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n    <h2 class=\"card-title\">Patient Details</h2>\r\n    <p class=\"card-text\" >ID: {{ patient.id }}</p>\r\n    <p class=\"card-text\">Name: {{ patient.name }}</p>\r\n    <p class=\"card-text\">Mobile Number: {{ patient.mobileNumber }}</p>\r\n    <!-- Display other patient details as necessary -->\r\n  <!-- </div> -->\r\n</div>\r\n</div>\r\n</div>\r\n  <div class=\"container\">\r\n    <h2>Visit Details</h2>\r\n    <div class=\"row\">\r\n       <p><strong>Doctor Name:</strong>{{this.currentUser}} </p>\r\n        <div class=\"col-md-3\" *ngFor=\"let visit of vpatient.visits\">\r\n        \r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <h5 class=\"card-title\"></h5>\r\n                    <p class=\"card-text\"></p>\r\n                   \r\n                    <p><strong>Patient Name:</strong> {{this.user.name}}</p>\r\n                    <p><strong>Condition:</strong>{{visit.condition}} </p>\r\n                    <p><strong>Treatment:</strong> {{visit.treatment}}</p>\r\n                    <!-- <button class=\"btn btn-primary\" >View Details</button> -->\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n     <br>\r\n     <br>           \r\n   \r\n  \r\n    <!-- <h3>Prescribed Medicine</h3>\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Medicine Name</th>\r\n          <th>Dosage</th>\r\n          <th>After Meal</th>\r\n          <th>Duration Date</th>\r\n          <th>Advice</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let visit of vpatient.visits\">\r\n          <ng-container *ngFor=\"let medicine of visit.prescriptions\">\r\n        \r\n          <td>{{medicine.medicineName}}</td>\r\n          <td>{{medicine.dosage}}</td>\r\n          <td>{{medicine.afterMeal ? 'Yes' : 'No'}}</td>\r\n          <td>{{medicine.durationDate | date:'MMM dd, yyyy'}}</td>\r\n          <td>{{medicine.advice}}</td>\r\n    \r\n      </ng-container>\r\n    </tr>\r\n      </tbody>\r\n    </table> -->\r\n</div>\r\n</div>\r\n</div>\r\n   \r\n"],"mappings":";;;;;;;IC2BgBA,EAHR,CAAAC,cAAA,cAA4D,cAEtC,aACS;IAEnBD,EADA,CAAAE,SAAA,YAA4B,WACH;IAEtBF,EAAH,CAAAC,cAAA,QAAG,aAAQ;IAAAD,EAAA,CAAAG,MAAA,oBAAa;IAAAH,EAAA,CAAAI,YAAA,EAAS;IAACJ,EAAA,CAAAG,MAAA,GAAkB;IAAAH,EAAA,CAAAI,YAAA,EAAI;IACrDJ,EAAH,CAAAC,cAAA,QAAG,cAAQ;IAAAD,EAAA,CAAAG,MAAA,kBAAU;IAAAH,EAAA,CAAAI,YAAA,EAAS;IAAAJ,EAAA,CAAAG,MAAA,IAAoB;IAAAH,EAAA,CAAAI,YAAA,EAAI;IACnDJ,EAAH,CAAAC,cAAA,SAAG,cAAQ;IAAAD,EAAA,CAAAG,MAAA,kBAAU;IAAAH,EAAA,CAAAI,YAAA,EAAS;IAACJ,EAAA,CAAAG,MAAA,IAAmB;IAI9DH,EAJ8D,CAAAI,YAAA,EAAI,EAEpD,EACJ,EACJ;;;;;IANwCJ,EAAA,CAAAK,SAAA,GAAkB;IAAlBL,EAAA,CAAAM,kBAAA,MAAAC,MAAA,CAAAC,IAAA,CAAAC,IAAA,KAAkB;IACtBT,EAAA,CAAAK,SAAA,GAAoB;IAApBL,EAAA,CAAAM,kBAAA,KAAAI,QAAA,CAAAC,SAAA,MAAoB;IACnBX,EAAA,CAAAK,SAAA,GAAmB;IAAnBL,EAAA,CAAAM,kBAAA,MAAAI,QAAA,CAAAE,SAAA,KAAmB;;;ADDtE,OAAM,MAAOC,gBAAgB;EAa3BC,YAAoBC,cAA+B,EAAUC,WAAuB;IAAhE,KAAAD,cAAc,GAAdA,cAAc;IAA2B,KAAAC,WAAW,GAAXA,WAAW;IAZxE,KAAAC,YAAY,GAAW,EAAE,CAAC,CAAC;IAC3B,KAAAC,OAAO,GAAY,EAAa;IAChC,KAAAC,QAAQ,GAAG;MACTC,MAAM,EAAE;KACT;IAED,KAAAC,KAAK,GAAS,EAAE,CAAC,CAAC;IAIjB,KAAAC,WAAW,GAAW,EAAE;EAE8D;EAEvFC,QAAQA,CAAA;IACN,MAAMC,SAAS,GAAG,GAAG,CAAC,CAAC;IACvB,IAAI,CAACT,cAAc,CAACU,UAAU,CAACD,SAAS,CAAC,CAACE,SAAS;IAAE;IAClDlB,IAAS,IAAI;MACZ,IAAI,CAACA,IAAI,GAAGA,IAAI;MAChB,IAAI,CAACW,QAAQ,CAACC,MAAM,GAAGZ,IAAI,CAACY,MAAM;MAEpC;MACA;MACA;MACI,IAAI,CAACL,cAAc,CAACU,UAAU,CAACD,SAAS,CAAC,CAACE,SAAS,CACjDR,OAAO,IAAI,IAAI,CAACA,OAAO,GAAGA,OAAO,EACjCS,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;MACD,IAAI,CAACX,WAAW,CAACa,cAAc,EAAE,CAC9BC,KAAU,IAAK,IAAI,CAACR,WAAW,GAAGQ,KAAK,EACvCH,KAAY,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CACvC;IAEH,CAAC,EACDA,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAC9B;EACH;EAEFI,aAAaA,CAAA;IAEX,IAAI,IAAI,CAACd,YAAY,EAAE;MACvB,IAAI,CAACF,cAAc,CAACiB,qBAAqB,CAAC,IAAI,CAACf,YAAY,CAAC,CAACS,SAAS,CACnER,OAAgB,IAAK,IAAI,CAACA,OAAO,GAAGA,OAAO,EAC3CS,KAAY,IAAKC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAClE;IACH,CAAC,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAC;IAChD;EACA;;;uCAjDWd,gBAAgB,EAAAb,EAAA,CAAAiC,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAnC,EAAA,CAAAiC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAhBxB,gBAAgB;MAAAyB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UC5BzB5C,EAJJ,CAAAC,cAAA,aAA4B,aACP,aACQ,aACS,eACyD;UAApFD,EAAA,CAAA8C,gBAAA,2BAAAC,yDAAAC,MAAA;YAAAhD,EAAA,CAAAiD,kBAAA,CAAAJ,GAAA,CAAA5B,YAAA,EAAA+B,MAAA,MAAAH,GAAA,CAAA5B,YAAA,GAAA+B,MAAA;YAAA,OAAAA,MAAA;UAAA,EAA0B;UAAjChD,EAAA,CAAAI,YAAA,EAA2F;UAC3FJ,EAAA,CAAAC,cAAA,gBAA0D;UAA1BD,EAAA,CAAAkD,UAAA,mBAAAC,kDAAA;YAAA,OAASN,GAAA,CAAAd,aAAA,EAAe;UAAA,EAAC;UAAC/B,EAAA,CAAAG,MAAA,aAAM;UAClEH,EADkE,CAAAI,YAAA,EAAS,EACrE;UAKJJ,EAFA,CAAAC,cAAA,aAAwB,aACG,YACJ;UAAAD,EAAA,CAAAG,MAAA,uBAAe;UAAAH,EAAA,CAAAI,YAAA,EAAK;UAC3CJ,EAAA,CAAAC,cAAA,YAAsB;UAAAD,EAAA,CAAAG,MAAA,IAAoB;UAAAH,EAAA,CAAAI,YAAA,EAAI;UAC9CJ,EAAA,CAAAC,cAAA,YAAqB;UAAAD,EAAA,CAAAG,MAAA,IAAwB;UAAAH,EAAA,CAAAI,YAAA,EAAI;UACjDJ,EAAA,CAAAC,cAAA,YAAqB;UAAAD,EAAA,CAAAG,MAAA,IAAyC;UAKlEH,EALkE,CAAAI,YAAA,EAAI,EAGhE,EACA,EACA;UAEFJ,EADF,CAAAC,cAAA,eAAuB,UACjB;UAAAD,EAAA,CAAAG,MAAA,qBAAa;UAAAH,EAAA,CAAAI,YAAA,EAAK;UAEhBJ,EADN,CAAAC,cAAA,cAAiB,SACX,cAAQ;UAAAD,EAAA,CAAAG,MAAA,oBAAY;UAAAH,EAAA,CAAAI,YAAA,EAAS;UAAAJ,EAAA,CAAAG,MAAA,IAAqB;UAAAH,EAAA,CAAAI,YAAA,EAAI;UACxDJ,EAAA,CAAAoD,UAAA,KAAAC,gCAAA,mBAA4D;UAchErD,EAAA,CAAAI,YAAA,EAAM;UAGLJ,EADA,CAAAE,SAAA,UAAI,UACA;UA8BTF,EAFA,CAAAI,YAAA,EAAM,EACA,EACA;;;UAnEKJ,EAAA,CAAAK,SAAA,GAA0B;UAA1BL,EAAA,CAAAsD,gBAAA,YAAAT,GAAA,CAAA5B,YAAA,CAA0B;UAQXjB,EAAA,CAAAK,SAAA,GAAoB;UAApBL,EAAA,CAAAM,kBAAA,SAAAuC,GAAA,CAAA3B,OAAA,CAAAqC,EAAA,KAAoB;UACrBvD,EAAA,CAAAK,SAAA,GAAwB;UAAxBL,EAAA,CAAAM,kBAAA,WAAAuC,GAAA,CAAA3B,OAAA,CAAAT,IAAA,KAAwB;UACxBT,EAAA,CAAAK,SAAA,GAAyC;UAAzCL,EAAA,CAAAM,kBAAA,oBAAAuC,GAAA,CAAA3B,OAAA,CAAAD,YAAA,KAAyC;UAS3BjB,EAAA,CAAAK,SAAA,GAAqB;UAArBL,EAAA,CAAAM,kBAAA,KAAAuC,GAAA,CAAAvB,WAAA,MAAqB;UACZtB,EAAA,CAAAK,SAAA,EAAkB;UAAlBL,EAAA,CAAAwD,UAAA,YAAAX,GAAA,CAAA1B,QAAA,CAAAC,MAAA,CAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}