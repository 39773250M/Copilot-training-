{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AddVisitComponent = class AddVisitComponent {\n  constructor(fb, route, visitService, router, patientService) {\n    this.fb = fb;\n    this.route = route;\n    this.visitService = visitService;\n    this.router = router;\n    this.patientService = patientService;\n    this.patientId = \"\";\n    this.visitForm = this.fb.group({\n      consultation: ['', Validators.required],\n      treatment: ['', Validators.required],\n      prescription: ['', Validators.required]\n    });\n    this.patientId = this.route.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.patientId = this.route.snapshot.paramMap.get('id');\n    this.getPatientDetails();\n  }\n  getPatientDetails() {\n    this.patientService.getPatientById(this.patientId).subscribe(patient => {\n      this.patientDetails = patient;\n    }, error => {\n      console.error('Error fetching patient details:', error);\n    });\n  }\n  // addVisit(): void {\n  //   if (this.visitForm.valid) {\n  //     const visitData = {\n  //       patientId: this.patientId,\n  //       consultation: this.visitForm.value.consultation,\n  //       treatment: this.visitForm.value.treatment,\n  //       prescription: this.visitForm.value.prescription\n  //     };\n  //     this.visitService.addVisit(visitData).subscribe(\n  //       (response: any) => {\n  //         console.log('Visit added successfully:', response);\n  //         this.router.navigate(['/patients']);\n  //       },\n  //       (error: any) => {\n  //         console.error('Error adding visit:', error);\n  //       }\n  //     );\n  //   }\n  // }\n  onSubmit() {\n    if (this.visitForm.valid) {\n      const visitData = {\n        ...this.visitForm.value,\n        patientId: this.patientId\n      };\n      this.visitService.addVisit(visitData).subscribe(response => {\n        console.log('Visit added successfully', response);\n        this.router.navigate(['/visits']);\n      }, error => {\n        console.error('Error adding visit', error);\n      });\n    }\n  }\n};\nAddVisitComponent = __decorate([Component({\n  selector: 'app-add-visit',\n  templateUrl: './add-visit.component.html',\n  styleUrls: ['./add-visit.component.css']\n})], AddVisitComponent);\nexport { AddVisitComponent };","map":{"version":3,"names":["Component","Validators","AddVisitComponent","constructor","fb","route","visitService","router","patientService","patientId","visitForm","group","consultation","required","treatment","prescription","snapshot","paramMap","get","ngOnInit","getPatientDetails","getPatientById","subscribe","patient","patientDetails","error","console","onSubmit","valid","visitData","value","addVisit","response","log","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\add-visit\\add-visit.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { VisitsService } from './../../../src/services/visits/visits.service';\r\nimport { PatientService } from './../../../src/services/patients/patients.service';\r\n\r\n@Component({\r\n  selector: 'app-add-visit',\r\n  templateUrl: './add-visit.component.html',\r\n  styleUrls: ['./add-visit.component.css']\r\n})\r\nexport class AddVisitComponent implements OnInit {\r\n  visitForm: FormGroup;\r\n  patientId: string = \"\";\r\n  patientDetails: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private visitService: VisitsService,\r\n    private router: Router,\r\n    private patientService:PatientService\r\n  ) {\r\n    this.visitForm = this.fb.group({\r\n      consultation: ['', Validators.required],\r\n      treatment: ['', Validators.required],\r\n      prescription: ['', Validators.required]\r\n    });\r\n    this.patientId = this.route.snapshot.paramMap.get('id')!;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.patientId = this.route.snapshot.paramMap.get('id')!;\r\n    this.getPatientDetails();\r\n  }\r\n\r\n  getPatientDetails(): void {\r\n    this.patientService.getPatientById(this.patientId).subscribe(\r\n      (patient: any) => {\r\n        this.patientDetails = patient;\r\n      },\r\n      (error: any) => {\r\n        console.error('Error fetching patient details:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // addVisit(): void {\r\n  //   if (this.visitForm.valid) {\r\n  //     const visitData = {\r\n  //       patientId: this.patientId,\r\n  //       consultation: this.visitForm.value.consultation,\r\n  //       treatment: this.visitForm.value.treatment,\r\n  //       prescription: this.visitForm.value.prescription\r\n  //     };\r\n\r\n  //     this.visitService.addVisit(visitData).subscribe(\r\n  //       (response: any) => {\r\n  //         console.log('Visit added successfully:', response);\r\n  //         this.router.navigate(['/patients']);\r\n  //       },\r\n  //       (error: any) => {\r\n  //         console.error('Error adding visit:', error);\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // }\r\n  onSubmit(): void {\r\n    if (this.visitForm.valid) {\r\n      const visitData = {\r\n        ...this.visitForm.value,\r\n        patientId: this.patientId\r\n      };\r\n      this.visitService.addVisit(visitData).subscribe(\r\n        response => {\r\n          console.log('Visit added successfully', response);\r\n          this.router.navigate(['/visits']);\r\n        },\r\n        error => {\r\n          console.error('Error adding visit', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAU5D,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YACUC,EAAe,EACfC,KAAqB,EACrBC,YAA2B,EAC3BC,MAAc,EACdC,cAA6B;IAJ7B,KAAAJ,EAAE,GAAFA,EAAE;IACF,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,cAAc,GAAdA,cAAc;IARxB,KAAAC,SAAS,GAAW,EAAE;IAUpB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACN,EAAE,CAACO,KAAK,CAAC;MAC7BC,YAAY,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACY,QAAQ,CAAC;MACvCC,SAAS,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ,CAAC;MACpCE,YAAY,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACY,QAAQ;KACvC,CAAC;IACF,IAAI,CAACJ,SAAS,GAAG,IAAI,CAACJ,KAAK,CAACW,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;EAC1D;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACV,SAAS,GAAG,IAAI,CAACJ,KAAK,CAACW,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAE;IACxD,IAAI,CAACE,iBAAiB,EAAE;EAC1B;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAACZ,cAAc,CAACa,cAAc,CAAC,IAAI,CAACZ,SAAS,CAAC,CAACa,SAAS,CACzDC,OAAY,IAAI;MACf,IAAI,CAACC,cAAc,GAAGD,OAAO;IAC/B,CAAC,EACAE,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD,CAAC,CACF;EACH;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACjB,SAAS,CAACkB,KAAK,EAAE;MACxB,MAAMC,SAAS,GAAG;QAChB,GAAG,IAAI,CAACnB,SAAS,CAACoB,KAAK;QACvBrB,SAAS,EAAE,IAAI,CAACA;OACjB;MACD,IAAI,CAACH,YAAY,CAACyB,QAAQ,CAACF,SAAS,CAAC,CAACP,SAAS,CAC7CU,QAAQ,IAAG;QACTN,OAAO,CAACO,GAAG,CAAC,0BAA0B,EAAED,QAAQ,CAAC;QACjD,IAAI,CAACzB,MAAM,CAAC2B,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;MACnC,CAAC,EACDT,KAAK,IAAG;QACNC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C,CAAC,CACF;IACH;EACF;CACD;AAzEYvB,iBAAiB,GAAAiC,UAAA,EAL7BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWpC,iBAAiB,CAyE7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}