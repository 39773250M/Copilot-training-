{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../../../src/services/visits/visits.service\";\nimport * as i4 from \"./../../../src/services/patients/patients.service\";\nimport * as i5 from \"@angular/common\";\nfunction AddVisitComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Consultation is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddVisitComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Symptoms are required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddVisitComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Treatment is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddVisitComponent_div_24_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Medicine name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddVisitComponent_div_24_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Duration is required and must be at least 1 day. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddVisitComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"h4\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\")(4, \"label\", 22);\n    i0.ɵɵtext(5, \"Medicine Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 23);\n    i0.ɵɵtemplate(7, AddVisitComponent_div_24_div_7_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 24)(9, \"label\");\n    i0.ɵɵtext(10, \"Dosage\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\")(12, \"label\");\n    i0.ɵɵelement(13, \"input\", 25);\n    i0.ɵɵtext(14, \" Morning \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"label\");\n    i0.ɵɵelement(16, \"input\", 26);\n    i0.ɵɵtext(17, \" Afternoon \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"label\");\n    i0.ɵɵelement(19, \"input\", 27);\n    i0.ɵɵtext(20, \" Evening \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"div\")(22, \"label\");\n    i0.ɵɵelement(23, \"input\", 28);\n    i0.ɵɵtext(24, \" After Meals \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(25, \"div\")(26, \"label\", 29);\n    i0.ɵɵtext(27, \"Duration (days)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(28, \"input\", 30);\n    i0.ɵɵtemplate(29, AddVisitComponent_div_24_div_29_Template, 2, 0, \"div\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function AddVisitComponent_div_24_Template_button_click_30_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.removePrescription(i_r2));\n    });\n    i0.ɵɵtext(31, \"Remove Prescription\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const prescription_r4 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Prescription \", i_r2 + 1, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", prescription_r4.get(\"medicineName\").invalid && prescription_r4.get(\"medicineName\").touched);\n    i0.ɵɵadvance(22);\n    i0.ɵɵproperty(\"ngIf\", prescription_r4.get(\"duration\").invalid && prescription_r4.get(\"duration\").touched);\n  }\n}\nfunction AddVisitComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Patient Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Name: \", ctx_r2.patientDetails.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Mobile Number: \", ctx_r2.patientDetails.mobileNumber, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Condition: \", ctx_r2.patientDetails.condition, \"\");\n  }\n}\nexport class AddVisitComponent {\n  constructor(fb, route, visitService, router, patientService) {\n    this.fb = fb;\n    this.route = route;\n    this.visitService = visitService;\n    this.router = router;\n    this.patientService = patientService;\n    this.patientId = 1;\n    this.visitForm = this.fb.group({\n      consultation: ['', Validators.required],\n      symptoms: ['', Validators.required],\n      treatment: ['', Validators.required],\n      advice: ['', Validators.required],\n      prescriptions: this.fb.array([this.createPrescription()])\n    });\n    this.patientId = +this.route.snapshot.paramMap.get('id');\n  }\n  ngOnInit() {\n    this.patientId = +this.route.snapshot.paramMap.get('id');\n    this.getPatientDetails();\n  }\n  getPatientDetails() {\n    this.patientService.getPatient(this.patientId).subscribe(patient => {\n      this.patientDetails = patient;\n    }, error => {\n      console.error('Error fetching patient details:', error);\n    });\n  }\n  // addVisit(): void {\n  //   if (this.visitForm.valid) {\n  //     const visitData = {\n  //       patientId: this.patientId,\n  //       consultation: this.visitForm.value.consultation,\n  //       treatment: this.visitForm.value.treatment,\n  //       prescription: this.visitForm.value.prescription\n  //     };\n  //     this.visitService.addVisit(visitData).subscribe(\n  //       (response: any) => {\n  //         console.log('Visit added successfully:', response);\n  //         this.router.navigate(['/patients']);\n  //       },\n  //       (error: any) => {\n  //         console.error('Error adding visit:', error);\n  //       }\n  //     );\n  //   }\n  // }\n  onSubmit() {\n    if (this.visitForm.valid) {\n      const visitData = {\n        ...this.visitForm.value,\n        patientId: this.patientId\n      };\n      this.visitService.addVisit(visitData).subscribe(response => {\n        console.log('Visit added successfully', response);\n        this.router.navigate(['/visits']);\n      }, error => {\n        console.error('Error adding visit', error);\n      });\n    }\n  }\n  createPrescription() {\n    return this.fb.group({\n      medicineName: ['', Validators.required],\n      dosage: this.fb.group({\n        morning: [false],\n        afternoon: [false],\n        evening: [false]\n      }),\n      afterMeals: [false],\n      duration: ['', [Validators.required, Validators.min(1)]]\n    });\n  }\n  addPrescription() {\n    this.prescriptions.push(this.createPrescription());\n  }\n  removePrescription(index) {\n    this.prescriptions.removeAt(index);\n  }\n  static {\n    this.ɵfac = function AddVisitComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AddVisitComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.VisitsService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i4.PatientsService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AddVisitComponent,\n      selectors: [[\"app-add-visit\"]],\n      decls: 32,\n      vars: 7,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\", \"mb-4\"], [1, \"card-body\"], [1, \"card-title\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [\"for\", \"consultation\", 1, \"form-label\"], [\"id\", \"consultation\", \"formControlName\", \"consultation\", \"rows\", \"3\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"for\", \"symptoms\", 1, \"form-label\"], [\"id\", \"symptoms\", \"formControlName\", \"symptoms\", \"rows\", \"3\", 1, \"form-control\"], [\"for\", \"treatment\", 1, \"form-label\"], [\"id\", \"treatment\", \"formControlName\", \"treatment\", \"rows\", \"3\", 1, \"form-control\"], [\"formArrayName\", \"prescriptions\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"], [4, \"ngIf\"], [1, \"text-danger\"], [3, \"formGroupName\"], [\"for\", \"medicineName\"], [\"id\", \"medicineName\", \"formControlName\", \"medicineName\"], [\"formGroupName\", \"dosage\"], [\"type\", \"checkbox\", \"formControlName\", \"morning\"], [\"type\", \"checkbox\", \"formControlName\", \"afternoon\"], [\"type\", \"checkbox\", \"formControlName\", \"evening\"], [\"type\", \"checkbox\", \"formControlName\", \"afterMeals\"], [\"for\", \"duration\"], [\"id\", \"duration\", \"type\", \"number\", \"formControlName\", \"duration\"]],\n      template: function AddVisitComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\", 5);\n          i0.ɵɵtext(6, \"Add Visit\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function AddVisitComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n          i0.ɵɵtext(10, \"Consultation\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"textarea\", 9);\n          i0.ɵɵtemplate(12, AddVisitComponent_div_12_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 11);\n          i0.ɵɵtext(15, \"Symptoms\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"textarea\", 12);\n          i0.ɵɵtemplate(17, AddVisitComponent_div_17_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 13);\n          i0.ɵɵtext(20, \"Treatment\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(21, \"textarea\", 14);\n          i0.ɵɵtemplate(22, AddVisitComponent_div_22_Template, 2, 0, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"div\", 15);\n          i0.ɵɵtemplate(24, AddVisitComponent_div_24_Template, 32, 4, \"div\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"button\", 17);\n          i0.ɵɵlistener(\"click\", function AddVisitComponent_Template_button_click_25_listener() {\n            return ctx.addPrescription();\n          });\n          i0.ɵɵtext(26, \"Add Prescription\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"button\", 18);\n          i0.ɵɵtext(28, \"Add Visit\");\n          i0.ɵɵelementEnd()()()()()()();\n          i0.ɵɵelementStart(29, \"h2\");\n          i0.ɵɵtext(30, \"Patient Consultation and Treatment Details\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(31, AddVisitComponent_div_31_Template, 9, 3, \"div\", 19);\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"formGroup\", ctx.visitForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.visitForm.get(\"consultation\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.visitForm.get(\"consultation\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.visitForm.get(\"symptoms\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.visitForm.get(\"symptoms\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.visitForm.get(\"treatment\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.visitForm.get(\"treatment\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.prescriptions.controls);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.visitForm.invalid);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.patientDetails);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n      styles: [\"\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\t\\\"use strict\\\";\\n\\n \\t\\n\\n \\t\\n\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵtemplate","AddVisitComponent_div_24_div_7_Template","AddVisitComponent_div_24_div_29_Template","ɵɵlistener","AddVisitComponent_div_24_Template_button_click_30_listener","i_r2","ɵɵrestoreView","_r1","index","ctx_r2","ɵɵnextContext","ɵɵresetView","removePrescription","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","prescription_r4","get","invalid","touched","patientDetails","name","mobileNumber","condition","AddVisitComponent","constructor","fb","route","visitService","router","patientService","patientId","visitForm","group","consultation","required","symptoms","treatment","advice","prescriptions","array","createPrescription","snapshot","paramMap","ngOnInit","getPatientDetails","getPatient","subscribe","patient","error","console","onSubmit","valid","visitData","value","addVisit","response","log","navigate","medicineName","dosage","morning","afternoon","evening","afterMeals","duration","min","addPrescription","push","removeAt","ɵɵdirectiveInject","i1","FormBuilder","i2","ActivatedRoute","i3","VisitsService","Router","i4","PatientsService","selectors","decls","vars","consts","template","AddVisitComponent_Template","rf","ctx","AddVisitComponent_Template_form_ngSubmit_7_listener","AddVisitComponent_div_12_Template","AddVisitComponent_div_17_Template","AddVisitComponent_div_22_Template","AddVisitComponent_div_24_Template","AddVisitComponent_Template_button_click_25_listener","AddVisitComponent_div_31_Template","tmp_1_0","tmp_2_0","tmp_3_0","controls"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\add-visit\\add-visit.component.ts","E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\add-visit\\add-visit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { VisitsService } from './../../../src/services/visits/visits.service';\r\nimport { PatientsService } from './../../../src/services/patients/patients.service';\r\n\r\n@Component({\r\n  selector: 'app-add-visit',\r\n  templateUrl: './add-visit.component.html',\r\n  styleUrls: ['./add-visit.component.css']\r\n})\r\nexport class AddVisitComponent implements OnInit {\r\n  visitForm: FormGroup;\r\n  patientId: number =1;\r\n  patientDetails: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private visitService: VisitsService,\r\n    private router: Router,\r\n    private patientService:PatientsService\r\n  ) {\r\n    this.visitForm = this.fb.group({\r\n      consultation: ['', Validators.required],\r\n      symptoms: ['', Validators.required],\r\n      treatment: ['', Validators.required],\r\n      advice: ['', Validators.required],\r\n      prescriptions: this.fb.array([this.createPrescription()])\r\n    });\r\n    this.patientId = +this.route.snapshot.paramMap.get('id')!;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.patientId = +this.route.snapshot.paramMap.get('id')!;\r\n    this.getPatientDetails();\r\n  }\r\n\r\n  getPatientDetails(): void {\r\n    this.patientService.getPatient(this.patientId).subscribe(\r\n      (patient: any) => {\r\n        this.patientDetails = patient;\r\n      },\r\n      (error: any) => {\r\n        console.error('Error fetching patient details:', error);\r\n      }\r\n    );\r\n  }\r\n\r\n  // addVisit(): void {\r\n  //   if (this.visitForm.valid) {\r\n  //     const visitData = {\r\n  //       patientId: this.patientId,\r\n  //       consultation: this.visitForm.value.consultation,\r\n  //       treatment: this.visitForm.value.treatment,\r\n  //       prescription: this.visitForm.value.prescription\r\n  //     };\r\n\r\n  //     this.visitService.addVisit(visitData).subscribe(\r\n  //       (response: any) => {\r\n  //         console.log('Visit added successfully:', response);\r\n  //         this.router.navigate(['/patients']);\r\n  //       },\r\n  //       (error: any) => {\r\n  //         console.error('Error adding visit:', error);\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // }\r\n  onSubmit(): void {\r\n    if (this.visitForm.valid) {\r\n      const visitData = {\r\n        ...this.visitForm.value,\r\n        patientId: this.patientId\r\n      };\r\n      this.visitService.addVisit(visitData).subscribe(\r\n        response => {\r\n          console.log('Visit added successfully', response);\r\n          this.router.navigate(['/visits']);\r\n        },\r\n        error => {\r\n          console.error('Error adding visit', error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  createPrescription(): FormGroup {\r\n    return this.fb.group({\r\n      medicineName: ['', Validators.required],\r\n      dosage: this.fb.group({\r\n        morning: [false],\r\n        afternoon: [false],\r\n        evening: [false]\r\n      }),\r\n      afterMeals: [false],\r\n      duration: ['', [Validators.required, Validators.min(1)]]\r\n    });\r\n  }\r\n\r\n\r\n  addPrescription(): void {\r\n    this.prescriptions.push(this.createPrescription());\r\n  }\r\n\r\n  removePrescription(index: number): void {\r\n    this.prescriptions.removeAt(index);\r\n  }\r\n\r\n\r\n}","<div class=\"container mt-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title\">Add Visit</h2>\r\n          <form [formGroup]=\"visitForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"mb-3\">\r\n              <label for=\"consultation\" class=\"form-label\">Consultation</label>\r\n              <textarea id=\"consultation\" class=\"form-control\" formControlName=\"consultation\" rows=\"3\"></textarea>\r\n              <div *ngIf=\"visitForm.get('consultation')?.invalid && visitForm.get('consultation')?.touched\" class=\"text-danger\">\r\n                Consultation is required.\r\n              </div>\r\n            </div>\r\n            <div class=\"mb-3\">\r\n                <label for=\"symptoms\" class=\"form-label\">Symptoms</label>\r\n                <textarea id=\"symptoms\" class=\"form-control\" formControlName=\"symptoms\" rows=\"3\"></textarea>\r\n                <div *ngIf=\"visitForm.get('symptoms')?.invalid && visitForm.get('symptoms')?.touched\" class=\"text-danger\">\r\n                    Symptoms are required.\r\n                </div>\r\n              </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"treatment\" class=\"form-label\">Treatment</label>\r\n              <textarea id=\"treatment\" class=\"form-control\" formControlName=\"treatment\" rows=\"3\"></textarea>\r\n              <div *ngIf=\"visitForm.get('treatment')?.invalid && visitForm.get('treatment')?.touched\" class=\"text-danger\">\r\n                Treatment is required.\r\n              </div>\r\n            </div>\r\n            <div formArrayName=\"prescriptions\">\r\n                <div *ngFor=\"let prescription of prescriptions.controls; let i = index\" [formGroupName]=\"i\">\r\n                  <h4>Prescription {{ i + 1 }}</h4>\r\n                  <div>\r\n                    <label for=\"medicineName\">Medicine Name</label>\r\n                    <input id=\"medicineName\" formControlName=\"medicineName\" />\r\n                    <div *ngIf=\"prescription.get('medicineName').invalid && prescription.get('medicineName').touched\">\r\n                      Medicine name is required.\r\n                    </div>\r\n                  </div>\r\n            \r\n                  <div formGroupName=\"dosage\">\r\n                    <label>Dosage</label>\r\n                    <div>\r\n                      <label>\r\n                        <input type=\"checkbox\" formControlName=\"morning\" /> Morning\r\n                      </label>\r\n                      <label>\r\n                        <input type=\"checkbox\" formControlName=\"afternoon\" /> Afternoon\r\n                      </label>\r\n                      <label>\r\n                        <input type=\"checkbox\" formControlName=\"evening\" /> Evening\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n            \r\n                  <div>\r\n                    <label>\r\n                      <input type=\"checkbox\" formControlName=\"afterMeals\" /> After Meals\r\n                    </label>\r\n                  </div>\r\n            \r\n                  <div>\r\n                    <label for=\"duration\">Duration (days)</label>\r\n                    <input id=\"duration\" type=\"number\" formControlName=\"duration\" />\r\n                    <div *ngIf=\"prescription.get('duration').invalid && prescription.get('duration').touched\">\r\n                      Duration is required and must be at least 1 day.\r\n                    </div>\r\n                  </div>\r\n            \r\n                  <button type=\"button\" (click)=\"removePrescription(i)\">Remove Prescription</button>\r\n                </div>\r\n              </div>\r\n              <button type=\"button\" (click)=\"addPrescription()\">Add Prescription</button>\r\n            <!-- <div class=\"mb-3\">\r\n              <label for=\"prescription\" class=\"form-label\">Prescription</label>\r\n              <textarea id=\"prescription\" class=\"form-control\" formControlName=\"prescription\" rows=\"3\"></textarea>\r\n              <div *ngIf=\"visitForm.get('prescription')?.invalid && visitForm.get('prescription')?.touched\" class=\"text-danger\">\r\n                Prescription is required.\r\n              </div>\r\n            </div> -->\r\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"visitForm.invalid\">Add Visit</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<h2>Patient Consultation and Treatment Details</h2>\r\n\r\n<div *ngIf=\"patientDetails\">\r\n    <h2>Patient Details</h2>\r\n    <p>Name: {{ patientDetails.name }}</p>\r\n    <p>Mobile Number: {{ patientDetails.mobileNumber }}</p>\r\n    <p>Condition: {{ patientDetails.condition }}</p>\r\n    <!-- Add more patient details as needed -->\r\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}