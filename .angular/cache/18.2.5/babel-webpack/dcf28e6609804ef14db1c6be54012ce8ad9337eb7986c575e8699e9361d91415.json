{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VisitsService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/patients/'; // Replace with your API URL\n  }\n  getVisits(patientId) {\n    const url = `${this.apiUrl}${patientId}`;\n    return this.http.get(url);\n  }\n  getVisitDetails(visitId) {\n    return this.http.get(`${this.apiUrl}/${visitId}`);\n  }\n  addVisit(visitData) {\n    return this.http.post(this.apiUrl, visitData);\n  }\n  static {\n    this.ɵfac = function VisitsService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || VisitsService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: VisitsService,\n      factory: VisitsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["VisitsService","constructor","http","apiUrl","getVisits","patientId","url","get","getVisitDetails","visitId","addVisit","visitData","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\services\\visits\\visits.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VisitsService {\r\n  private apiUrl = 'http://localhost:3000/patients/'; // Replace with your API URL\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getVisits(patientId: string): Observable<any> {\r\n    const url = `${this.apiUrl}${patientId}`;\r\n    return this.http.get<any>(url);\r\n  }\r\n  getVisitDetails(visitId: string): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/${visitId}`);\r\n  }\r\n  addVisit(visitData: any): Observable<any> {\r\n    return this.http.post<any>(this.apiUrl, visitData);\r\n  }\r\n}\r\n"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,iCAAiC,CAAC,CAAC;EAEZ;EAExCC,SAASA,CAACC,SAAiB;IACzB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,GAAGE,SAAS,EAAE;IACxC,OAAO,IAAI,CAACH,IAAI,CAACK,GAAG,CAAMD,GAAG,CAAC;EAChC;EACAE,eAAeA,CAACC,OAAe;IAC7B,OAAO,IAAI,CAACP,IAAI,CAACK,GAAG,CAAM,GAAG,IAAI,CAACJ,MAAM,IAAIM,OAAO,EAAE,CAAC;EACxD;EACAC,QAAQA,CAACC,SAAc;IACrB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAM,IAAI,CAACT,MAAM,EAAEQ,SAAS,CAAC;EACpD;;;uCAdWX,aAAa,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbhB,aAAa;MAAAiB,OAAA,EAAbjB,aAAa,CAAAkB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}