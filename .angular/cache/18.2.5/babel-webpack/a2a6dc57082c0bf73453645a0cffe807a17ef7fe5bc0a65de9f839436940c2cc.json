{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../src/services/patients/patients.service\";\nfunction PatientComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2, \"Patient Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"ID: \", ctx_r0.patient.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Name: \", ctx_r0.patient.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Mobile Number: \", ctx_r0.patient.mobileNumber, \"\");\n  }\n}\nexport class PatientComponent {\n  constructor(patientService) {\n    this.patientService = patientService;\n    this.mobileNumber = ''; // Initialize the property\n    this.mobileNumber = '';\n    this.patient = null;\n  }\n  searchPatient() {\n    this.patient = {\n      id: '123',\n      name: 'John Doe',\n      mobileNumber: this.mobileNumber\n    };\n    if (this.mobileNumber) {\n      this.patientService.searchPatientByMobile(this.mobileNumber).subscribe(patient => this.patient = patient, error => console.error('Error fetching patient:', error));\n    } else {\n      console.error('Mobile number is not provided');\n    }\n  }\n  ngOnInit() {\n    // Initialization logic if needed\n  }\n  static {\n    this.ɵfac = function PatientComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || PatientComponent)(i0.ɵɵdirectiveInject(i1.PatientsService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PatientComponent,\n      selectors: [[\"app-patient\"]],\n      decls: 5,\n      vars: 2,\n      consts: [[\"placeholder\", \"Enter mobile number\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"], [4, \"ngIf\"]],\n      template: function PatientComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"input\", 0);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function PatientComponent_Template_input_ngModelChange_1_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.mobileNumber, $event) || (ctx.mobileNumber = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function PatientComponent_Template_button_click_2_listener() {\n            return ctx.searchPatient();\n          });\n          i0.ɵɵtext(3, \"Search\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(4, PatientComponent_div_4_Template, 9, 3, \"div\", 2);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.mobileNumber);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.patient);\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","patient","id","name","mobileNumber","PatientComponent","constructor","patientService","searchPatient","searchPatientByMobile","subscribe","error","console","ngOnInit","ɵɵdirectiveInject","i1","PatientsService","selectors","decls","vars","consts","template","PatientComponent_Template","rf","ctx","ɵɵtwoWayListener","PatientComponent_Template_input_ngModelChange_1_listener","$event","ɵɵtwoWayBindingSet","ɵɵlistener","PatientComponent_Template_button_click_2_listener","ɵɵtemplate","PatientComponent_div_4_Template","ɵɵtwoWayProperty","ɵɵproperty"],"sources":["E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\patient\\patient.component.ts","E:\\Murugan\\copilot angular hospital\\Copilot-training\\src\\app\\patient\\patient.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { PatientsService } from '../../../src/services/patients/patients.service'; // Adjust the path as necessary\n import { Patient } from '../../../src/models/patient'; // Adjust the path as necessary\n import { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.scss'],\n \n})\nexport class PatientComponent implements OnInit{\n  mobileNumber: string = ''; // Initialize the property\n  patient: Patient | null; // Initialize the property\n\n  constructor(private patientService: PatientsService) {\n    this.mobileNumber = '';\n    this.patient = null;\n  }\n\n  searchPatient(): void {\n    this.patient = {\n      id: '123',\n      name: 'John Doe',\n      mobileNumber: this.mobileNumber\n    };\n  \n    if (this.mobileNumber) {\n    this.patientService.searchPatientByMobile(this.mobileNumber).subscribe(\n      (patient: Patient) => this.patient = patient,\n      (error: Error) => console.error('Error fetching patient:', error)\n    );\n  } else {\n    console.error('Mobile number is not provided');\n  }\n  }\n\n  ngOnInit(): void {\n    // Initialization logic if needed\n  }\n\n}\n","<div>\n  <input [(ngModel)]=\"mobileNumber\" placeholder=\"Enter mobile number\" />\n  <button (click)=\"searchPatient()\">Search</button>\n</div>\n\n<div *ngIf=\"patient\">\n  <h2>Patient Details</h2>\n  <p>ID: {{ patient.id }}</p>\n  <p>Name: {{ patient.name }}</p>\n  <p>Mobile Number: {{ patient.mobileNumber }}</p>\n  <!-- Display other patient details as necessary -->\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}